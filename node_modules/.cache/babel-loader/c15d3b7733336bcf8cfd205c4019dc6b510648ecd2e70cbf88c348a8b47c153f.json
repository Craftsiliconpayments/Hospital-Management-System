{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/* eslint-disable */\nimport moment from 'moment';\nimport { biller, execute, executeDownload, getRight, patient } from \"@/api\";\nimport NavigationBar from \"@/components/Navigation\";\nimport router from \"@/router\";\nimport ToolBarPatient from \"@/components/master-patient/ToolBar.vue\";\nexport default {\n  name: \"PatientHistory\",\n  components: {\n    ToolBarPatient,\n    NavigationBar\n  },\n  data() {\n    return {\n      patientInitials: \"\",\n      loading: false,\n      // set the initial current page as 1\n      currentPage: 1,\n      // set the total number of pages as 10 (you can change this according to your data source)\n      totalPages: 0,\n      // set the number of items per page as 5 (you can change this according to your preference)\n      pageSize: 10,\n      totalItems: 0,\n      search: \"\",\n      patients: [{\n        id: null,\n        patientID: null,\n        title: null,\n        names: null,\n        phoneNumber: null,\n        physicalAddress: null,\n        gender: null,\n        idNo: null,\n        dateOfBirth: null,\n        maritalStatus: null,\n        levelOfEducation: null,\n        occupation: null,\n        religion: null,\n        languages: null,\n        countyID: null,\n        // (Optional, can be removed if unused)\n        countyName: null,\n        // (Optional, can be removed if unused)\n        bloodGroup: null,\n        subCountyID: null,\n        // Missing field\n        subCountyName: null,\n        // Missing field\n        wardName: null,\n        // Missing field\n        wardID: null,\n        // Missing field\n        lastSeen: null,\n        // Missing field\n        email: null,\n        // Missing field\n        town: null // Missing field\n      }],\n\n      receiptDetail: {\n        id: null,\n        receiptNo: null,\n        billNo: null,\n        detailAmount: null,\n        receiptAmount: null,\n        billBalance: null,\n        costCenterNo: null,\n        accountNo: null,\n        incomeTypeDescription: null,\n        feeID: null,\n        feeDescription: null,\n        wardID: null,\n        subCountyID: null,\n        subCountyName: null,\n        wardName: null,\n        currency: null,\n        source: null,\n        transactionCode: null,\n        paidBy: null,\n        dateCreated: null,\n        dateModified: null,\n        createdBy: null,\n        modifiedBy: null,\n        isActive: null,\n        status: null,\n        zone: null,\n        departmentID: null,\n        department: null,\n        idNo: null,\n        phoneNumber: null,\n        names: null,\n        customerPhoneNumber: null,\n        description: null,\n        category: null,\n        incomeTypePrefix: null,\n        invoicedBy: null,\n        invoicedByPhoneNumber: null,\n        invoicedByIdNo: null,\n        code: null,\n        printed: null,\n        receiptedBy: null,\n        customers: null,\n        patientID: null\n      },\n      receiptDetails: [{\n        id: null,\n        receiptNo: null,\n        billNo: null,\n        detailAmount: null,\n        receiptAmount: null,\n        billBalance: null,\n        costCenterNo: null,\n        accountNo: null,\n        incomeTypeDescription: null,\n        feeID: null,\n        feeDescription: null,\n        wardID: null,\n        subCountyID: null,\n        subCountyName: null,\n        wardName: null,\n        currency: null,\n        source: null,\n        transactionCode: null,\n        paidBy: null,\n        dateCreated: null,\n        dateModified: null,\n        createdBy: null,\n        modifiedBy: null,\n        isActive: null,\n        status: null,\n        zone: null,\n        departmentID: null,\n        department: null,\n        idNo: null,\n        phoneNumber: null,\n        names: null,\n        customerPhoneNumber: null,\n        description: null,\n        category: null,\n        incomeTypePrefix: null,\n        invoicedBy: null,\n        invoicedByPhoneNumber: null,\n        invoicedByIdNo: null,\n        code: null,\n        printed: null,\n        receiptedBy: null,\n        customers: null,\n        patientID: null\n      }],\n      receiptInfos: [{\n        id: null,\n        receiptNo: null,\n        billNo: null,\n        feeID: null,\n        feeDescription: null,\n        billTotal: null,\n        receiptAmount: null,\n        billBalance: null,\n        customer: null,\n        clientPhoneNo: null,\n        description: null,\n        receiptDate: null,\n        printCount: null,\n        wardID: null,\n        subCountyID: null,\n        subCountyName: null,\n        wardName: null,\n        dateCreated: null,\n        dateModified: null,\n        createdBy: null,\n        modifiedBy: null,\n        printedBy: null,\n        updated: null,\n        isActive: null,\n        status: null,\n        zone: null,\n        departmentID: null,\n        department: null,\n        idNo: null,\n        phoneNumber: null,\n        names: null,\n        customerPhoneNumber: null,\n        category: null,\n        incomeTypePrefix: null,\n        quantity: null,\n        invoicedBy: null,\n        invoicedByPhoneNumber: null,\n        invoicedByIdNo: null,\n        code: null,\n        patientID: null\n      }],\n      patientsDetails: {\n        patient: {\n          id: null,\n          patientID: null,\n          title: null,\n          names: null,\n          phoneNumber: null,\n          gender: null,\n          idNo: null,\n          dateOfBirth: null,\n          maritalStatus: null,\n          levelOfEducation: null,\n          nationality: null,\n          occupation: null,\n          religion: null,\n          languages: null,\n          bloodGroup: null,\n          physicalAddress: null,\n          subCountyID: null,\n          subCountyName: null,\n          wardName: null,\n          wardID: null,\n          lastSeen: null,\n          lastUpdate: null,\n          email: null,\n          town: null,\n          dateCreated: null,\n          height: null,\n          weight: null,\n          bmi: null,\n          registrationFacility: null,\n          createdBy: null,\n          updatedBy: null,\n          lastSeenAt: null,\n          careCard: null\n        },\n        guarantor: {\n          id: null,\n          visitCode: null,\n          patientIDNo: null,\n          idNo: null,\n          names: null,\n          phoneNumber: null,\n          email: null,\n          physicalAddress: null,\n          relationship: null\n        },\n        kins: [{\n          id: null,\n          patientIDNo: null,\n          idNo: null,\n          names: null,\n          phoneNumber: null,\n          address: null,\n          relationShip: null\n        }, {\n          id: null,\n          patientIDNo: null,\n          idNo: null,\n          names: null,\n          phoneNumber: null,\n          address: null,\n          relationShip: null\n        }],\n        visitEntries: {\n          id: null,\n          visitCode: null,\n          idNo: null,\n          names: null,\n          phoneNumber: null,\n          email: null,\n          reasonForVisit: null,\n          description: null,\n          departmentVisiting: null,\n          doctorNurse: null,\n          triage: null,\n          meansOfArrival: null,\n          payment: null,\n          dateCreated: null\n        },\n        nhif: {\n          id: null,\n          visitCode: null,\n          number: null,\n          policyholder: null\n        },\n        insurance: {\n          id: null,\n          visitCode: null,\n          provider: null,\n          policyNumber: null,\n          authorizationCode: null,\n          policyholder: null\n        },\n        insurances: [{\n          id: null,\n          visitCode: null,\n          provider: null,\n          policyNumber: null,\n          authorizationCode: null,\n          policyholder: null\n        }],\n        employer: {\n          id: null,\n          visitCode: null,\n          companyName: null,\n          companyID: null,\n          authorizationCode: null\n        },\n        chronicIllnesses: [{\n          illness: null,\n          dateCreated: null\n        }],\n        allergies: [{\n          allergy: null,\n          dateCreated: null\n        }]\n      },\n      visitEntries: [{\n        id: null,\n        visitCode: null,\n        idNo: null,\n        names: null,\n        phoneNumber: null,\n        email: null,\n        reasonForVisit: null,\n        description: null,\n        departmentVisiting: null,\n        doctorNurse: null,\n        triage: null,\n        meansOfArrival: null,\n        payment: null,\n        dateCreated: null\n      }]\n    };\n  },\n  watch: {\n    //pagination code\n    // define a watcher for the pageSize property\n    pageSize(newPageSize) {\n      this.getPatient(); //Todo to change here\n      // get the total number of items from your data source (you can change this according to your logic)\n      const totalItems = this.totalItems;\n      // calculate the new total pages by dividing the total items by the new page size and rounding up\n      const newTotalPages = Math.ceil(totalItems / newPageSize);\n      // update the totalPages data property with the new value\n      this.totalPages = newTotalPages;\n      // reset the current page to 1\n      this.currentPage = 1;\n    },\n    search() {\n      this.getPatient();\n    },\n    documentType() {\n      if (this.documentType === \"pdf\") {\n        // this.downloadReport()\n      } else if (this.documentType === \"excel\") {\n        // this.downloadReport()\n      } else {}\n    }\n  },\n  computed: {\n    //pagination code todo pagination\n    // calculate the start index of the items for the current page\n    startIndex() {\n      return (this.currentPage - 1) * this.pageSize;\n    },\n    // calculate the end index of the items for the current page\n    endIndex() {\n      return this.currentPage * this.pageSize;\n    }\n  },\n  mounted() {\n    this.dateFrom = moment().format('YYYY-MM-DD');\n    this.dateTo = moment().format('YYYY-MM-DD');\n\n    // this.dateTo = moment().endOf('month').format('YYYY-MM-DD')\n\n    this.$watch('dateFrom', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {} else {\n        this.getSubCountiesRevenue();\n      }\n    });\n    this.$watch('dateTo', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {} else {\n        this.getSubCountiesRevenue();\n      }\n    });\n    this.menuAccess();\n    this.getVisitEntries();\n    this.getPatientDetails();\n  },\n  methods: {\n    menuAccess() {\n      const data = new FormData();\n      data.append(\"function\", \"menuAccess\");\n      data.append(\"menu\", \"Reports Sub County\");\n      data.append(\"sessionNames\", sessionStorage.getItem(\"sessionNames\"));\n      data.append(\"sessionIdNo\", sessionStorage.getItem(\"sessionIdNo\"));\n      execute(data, biller).then(res => {\n        // alert(res.data.message);\n      }).catch(e => {\n        // alert(e.message);\n      });\n    },\n    getRight(type) {\n      return getRight(type);\n    },\n    //pagination code todo pagination\n    pagination(currentPage, totalPages, maxVisibleButtons) {\n      //initialize an empty array for the pages\n      let pages = [];\n      //calculate the start and end indices of the visible buttons\n      let start = currentPage - Math.floor(maxVisibleButtons / 2);\n      let end = currentPage + Math.floor(maxVisibleButtons / 2);\n      //adjust the start and end indices if they are out of bounds\n      if (start < 1) {\n        start = 1;\n        end = start + maxVisibleButtons - 1;\n        if (end > totalPages) {\n          end = totalPages;\n        }\n      }\n      if (end > totalPages) {\n        end = totalPages;\n        start = end - maxVisibleButtons + 1;\n        if (start < 1) {\n          start = 1;\n        }\n      }\n      //loop through the start and end indices and push the pages to the array\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      //add an ellipsis at the beginning if there are more pages before the start index\n      if (start > 1) {\n        pages.unshift(\"...\");\n      }\n      //add an ellipsis at the end if there are more pages after the end index\n      if (end < totalPages) {\n        pages.push(\"...\");\n      }\n      // return the array of pages\n      return pages;\n    },\n    // define a method to go to the previous page\n    prevPage() {\n      // check if the current page is not the first page\n      if (this.currentPage > 1) {\n        // decrement the current page by 1\n        this.currentPage--;\n        this.getPatient(); //Todo change\n      }\n    },\n\n    // define a method to go to the next page\n    nextPage() {\n      // check if the current page is not the last page\n      if (this.currentPage < this.totalPages) {\n        // increment the current page by 1\n        this.currentPage++;\n        this.getPatient(); //Todo change\n      }\n    },\n\n    // define a method to go to a specific page\n    goToPage(page) {\n      // check if the page is valid and not equal to the current page\n      if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n        // set the current page to the given page\n        this.currentPage = page;\n        this.getPatient(); //Todo change\n      }\n    },\n\n    formatDate(date) {\n      let d = new Date(date);\n      let day = d.getDate();\n      let month = d.toLocaleString('en-US', {\n        month: 'short'\n      });\n      let year = d.getFullYear();\n      let suffix = '';\n      if (day % 10 === 1 && day !== 11) {\n        suffix = 'st';\n      } else if (day % 10 === 2 && day !== 12) {\n        suffix = 'nd';\n      } else if (day % 10 === 3 && day !== 13) {\n        suffix = 'rd';\n      } else {\n        suffix = 'th';\n      }\n      return `${day}${suffix} ${month} ${year}`;\n    },\n    showDate() {\n      const dateObj = new Date();\n      const currentDate = dateObj.getDate() + \"/\" + dateObj.getMonth() + \"/\" + dateObj.getFullYear();\n      return currentDate;\n    },\n    gotTo(route, patientID) {\n      sessionStorage.setItem(\"selectedSub\", route);\n      sessionStorage.setItem(\"patientID\", patientID);\n      sessionStorage.setItem(\"patientIDNo\", patientID);\n      router.push(route);\n    },\n    gotToAll(route) {\n      sessionStorage.setItem(\"currentPage\", route);\n      sessionStorage.setItem(\"dateTo\", this.dateTo);\n      sessionStorage.setItem(\"dateFrom\", this.dateFrom);\n      sessionStorage.setItem(\"subCountyName\", \"ALL SUB COUNTIES\");\n      sessionStorage.setItem(\"subCountyID\", \"\");\n      //todo to check on this figures\n      sessionStorage.setItem(\"totalTransactions\", this.totalTransactions);\n      sessionStorage.setItem(\"amountTotal\", this.totalAmount);\n      sessionStorage.setItem(\"totalAgents\", this.totalAgents);\n      sessionStorage.setItem(\"totalZones\", this.totalZones);\n      router.push(route);\n    },\n    formatPrice(value) {\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n    numberFormat(num) {\n      const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n      return britishNumberFormatter.format(num);\n    },\n    getVisitEntries() {\n      this.loading = true;\n      const data = new FormData();\n      data.append(\"function\", \"getVisitEntries\");\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      data.append(\"page\", this.currentPage);\n      data.append(\"rows_per_page\", this.pageSize);\n      data.append(\"keyword\", this.search);\n      data.append(\"idNo\", sessionStorage.getItem(\"patientIDNo\"));\n      execute(data, patient).then(res => {\n        this.loading = false;\n        if (res.data.success) {\n          this.visitEntries = res.data.data.visitEntries;\n\n          //todo pagination\n          this.totalItems = res.data.data.totalItems;\n          this.totalPages = Math.ceil(this.totalItems / this.pageSize);\n        } else {\n          //alert(res.data.data.message);\n        }\n      }).catch(e => {\n        alert(e.message);\n      });\n    },\n    getPatientDetails() {\n      const data = new FormData();\n      data.append(\"function\", \"getPatientDetails\");\n      data.append(\"keyword\", sessionStorage.getItem(\"patientID\"));\n      execute(data, patient).then(res => {\n        this.loading = false;\n        if (res.data.success) {\n          this.patientsDetails = res.data.data;\n          this.patientInitials = this.patientsDetails.patient.names ? this.patientsDetails.patient.names.slice(0, 2).toUpperCase() : '';\n        } else {\n          //alert(res.data.data.message);\n        }\n      }).catch(e => {\n        alert(e.message);\n      });\n    }\n  }\n};","map":{"version":3,"names":["moment","biller","execute","executeDownload","getRight","patient","NavigationBar","router","ToolBarPatient","name","components","data","patientInitials","loading","currentPage","totalPages","pageSize","totalItems","search","patients","id","patientID","title","names","phoneNumber","physicalAddress","gender","idNo","dateOfBirth","maritalStatus","levelOfEducation","occupation","religion","languages","countyID","countyName","bloodGroup","subCountyID","subCountyName","wardName","wardID","lastSeen","email","town","receiptDetail","receiptNo","billNo","detailAmount","receiptAmount","billBalance","costCenterNo","accountNo","incomeTypeDescription","feeID","feeDescription","currency","source","transactionCode","paidBy","dateCreated","dateModified","createdBy","modifiedBy","isActive","status","zone","departmentID","department","customerPhoneNumber","description","category","incomeTypePrefix","invoicedBy","invoicedByPhoneNumber","invoicedByIdNo","code","printed","receiptedBy","customers","receiptDetails","receiptInfos","billTotal","customer","clientPhoneNo","receiptDate","printCount","printedBy","updated","quantity","patientsDetails","nationality","lastUpdate","height","weight","bmi","registrationFacility","updatedBy","lastSeenAt","careCard","guarantor","visitCode","patientIDNo","relationship","kins","address","relationShip","visitEntries","reasonForVisit","departmentVisiting","doctorNurse","triage","meansOfArrival","payment","nhif","number","policyholder","insurance","provider","policyNumber","authorizationCode","insurances","employer","companyName","companyID","chronicIllnesses","illness","allergies","allergy","watch","newPageSize","getPatient","newTotalPages","Math","ceil","documentType","computed","startIndex","endIndex","mounted","dateFrom","format","dateTo","$watch","newValue","getSubCountiesRevenue","menuAccess","getVisitEntries","getPatientDetails","methods","FormData","append","sessionStorage","getItem","then","res","catch","e","type","pagination","maxVisibleButtons","pages","start","floor","end","i","push","unshift","prevPage","nextPage","goToPage","page","formatDate","date","d","Date","day","getDate","month","toLocaleString","year","getFullYear","suffix","showDate","dateObj","currentDate","getMonth","gotTo","route","setItem","gotToAll","totalTransactions","totalAmount","totalAgents","totalZones","formatPrice","value","val","toFixed","replace","toString","numberFormat","num","britishNumberFormatter","Intl","NumberFormat","success","alert","message","slice","toUpperCase"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/HMIS/hospital-management/src/components/master-patient/PatientHistory.vue"],"sourcesContent":["<template>\n\n  <head>\n\n    <meta charset=\"utf-8\" />\n    <title>HOSPITAL MANAGEMENT INFORMATION SYSTEM</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta content=\"Rental management system by Nouveta LTD\" name=\"description\" />\n    <meta content=\"Kelvin Njuguna\" name=\"author\" />\n    <!-- App favicon -->\n    <link rel=\"shortcut icon\" href=\"assets/images/favicon.svg\">\n    <!-- droping file -->\n    <link href=\"assets/libs/dropzone/min/dropzone.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n    <!-- DataTables -->\n    <link href=\"assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <link href=\"assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n    <!-- Bootstrap Css -->\n    <link href=\"assets/css/bootstrap.min.css\" id=\"bootstrap-style\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- Bootstrap select styling -->\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n    <!-- Icons Css -->\n    <link href=\"assets/css/icons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n    <!-- owl.carousel css -->\n    <link rel=\"stylesheet\" href=\"assets/libs/owl.carousel/assets/owl.carousel.min.css\">\n\n    <link rel=\"stylesheet\" href=\"assets/libs/owl.carousel/assets/owl.theme.default.min.css\">\n\n    <!-- App Css-->\n    <link href=\"assets/css/app.min.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- custom Css-->\n    <link href=\"assets/css/custom.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n\n  </head>\n\n  <body data-sidebar=\"dark\">\n\n\n\n  <!-- Begin page -->\n  <div id=\"layout-wrapper\">\n\n\n    <!-- ========== Left Sidebar Start ========== -->\n   <NavigationBar/>\n    <!-- Left Sidebar End -->\n\n\n\n    <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-minimize\">\n\n      <div class=\"page-content\">\n        <div class=\"container-fluid\">\n\n          <!-- start page title -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n                <h4 class=\"mb-sm-0 font-size-18\">Visitation History</h4>\n\n                <div class=\"page-title-right\">\n                  <ol class=\"breadcrumb m-0\">\n                    <li class=\"breadcrumb-item\"><a href=\"index.html\">Dashboards</a></li>\n                    <li class=\"breadcrumb-item active\"><a href=\"patients.html\">MPI</a></li>\n                    <li class=\"breadcrumb-item active\">MPI</li>\n                  </ol>\n                </div>\n\n              </div>\n            </div>\n          </div>\n          <!-- end page title -->\n\n          <!-- navigation bar -->\n          <ToolBarPatient/>\n\n          <!-- navigation bar end -->\n\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-lg-4\">\n                      <div class=\"d-flex\">\n                        <div class=\"flex-shrink-0 me-3\">\n                          <div class=\"avatar-sm \">\n                            <p class=\"avatar-title rounded-circle text-uppercase\">\n                              {{ patientInitials }}\n                            </p>\n                          </div>\n                        </div>\n                        <div class=\"flex-grow-1 align-self-center\">\n                          <div class=\"text-muted\">\n                            <h5 class=\"mb-1\">{{patientsDetails.patient.title}} {{patientsDetails.patient.names}}</h5>\n                            <p class=\"text-muted mb-0 d-flex align-items-center\">\n                              <a :href=\"'tel:'+patientsDetails.patient.phoneNumber\" class=\"d-flex align-items-center\"><i class=\"mdi mdi-phone me-2 font-size-18\"></i> {{patientsDetails.patient.phoneNumber}}</a> <span class=\"px-3 px-3\">|</span>\n                              <a class=\"d-flex align-items-center\" :href=\"'mailto:'+patientsDetails.patient.email\"><i class=\"mdi mdi-email-outline font-size-18 me-2\"></i> {{patientsDetails.patient.email}}</a>\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-lg-6 align-self-center\">\n                      <div class=\"text-lg-center mt-4 mt-lg-0\">\n                        <div class=\"row\">\n                          <div class=\"col-3\">\n                            <div>\n                              <p class=\"text-muted text-truncate mb-2\">Religion</p>\n                              <h6 class=\"mb-0\">{{patientsDetails.patient.religion}}</h6>\n                            </div>\n                          </div>\n                          <div class=\"col-3\">\n                            <div>\n                              <p class=\"text-muted text-truncate mb-2\">Nationality</p>\n                              <h6 class=\"mb-0\">{{patientsDetails.patient.nationality}}</h6>\n                            </div>\n                          </div>\n                          <div class=\"col-3\">\n                            <div>\n                              <p class=\"text-muted text-truncate mb-2\">Education Level</p>\n                              <h6 class=\"mb-0\">{{patientsDetails.patient.levelOfEducation}}</h6>\n\n                            </div>\n                          </div>\n\n                          <div class=\"col-3\">\n                            <div>\n                              <p class=\"text-muted text-truncate mb-2\">Physical Address</p>\n                              <h6 class=\"mb-0\">{{patientsDetails.patient.physicalAddress}}</h6>\n\n                            </div>\n                          </div>\n\n\n                        </div>\n                      </div>\n                    </div>\n\n\n                  </div>\n                  <!-- end row -->\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"card\">\n                <div class=\"card-header bg-white pt-0 pr-0 p-0 d-flex justify-content-between align-items-center w-100 border-bottom\">\n\n                  <div class=\"btn-toolbar p-3 d-flex justify-content-between align-items-center w-100\" role=\"toolbar\">\n                    <h4 class=\"card-title mb-0 text-uppercase \">\n                      Visitation history\n                    </h4>\n\n                    <div class=\"d-flex\">\n                      <a  href=\"patient-new.html\" type=\"button\" class=\"btn btn-primary dropdown-toggle option-selector me-3 text-uppercase d-none\">\n                        <i class=\"mdi mdi-plus-circle-outline  font-size-16\"></i> <span class=\"pl-1 d-md-inline\">Add A Patient</span>\n                      </a>\n\n                    </div>\n\n\n                  </div>\n                  <div class=\"btn-toolbar p-3 align-items-center d-none animated delete-tool-bar\" role=\"toolbar\">\n                    <button type=\"button\" class=\"btn btn-primary waves-effect btn-label waves-light me-3\"><i class=\"mdi mdi-printer label-icon\"></i> Print Selected Invoices</button>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive \">\n\n                    <table class=\"table align-middle table-hover contacts-table table-striped\">\n                      <thead class=\"table-light\">\n                      <tr class=\"table-dark\">\n                        <th scope=\"col\">SN</th>\n                        <th scope=\"col\">Visit No.</th>\n                        <th scope=\"col\" title=\"date they visited hospital\">Visit Date</th>\n                        <th scope=\"col\">Patient</th>\n                        <th scope=\"col\">Clinic/Department(s)</th>\n                        <th scope=\"col\">Doctor/Nurse Name</th>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      <tr v-for=\"(item, index) in visitEntries\" :value=\"item\" :key=\"index\">\n                        <td>{{index+1}}</td>\n                        <td>{{item.visitCode}}</td>\n                        <td>{{item.dateCreated}}</td>\n                        <td>{{item.names}}</td>\n                        <td>{{item.departmentVisiting}}</td>\n                        <td>{{item.doctorNurse}}</td>\n                      </tr>\n                      </tbody>\n                      <tfoot class=\"table-dark\">\n                      <tr>\n                        <th colspan=\"6\">{{visitEntries.length}} Visits</th>\n                      </tr>\n                      </tfoot>\n                    </table>\n\n\n                    <div v-if=\"loading\" class=\"card-body px-5 d-flex flex-column justify-items-center align-items-center text-center d-flex justify-content-center\">\n                      <div class=\"p-5 py-0 pt-3\">\n                        <div class=\"p-5\">\n                          <div class=\"spinner-border text-info m-1\" role=\"status\">\n                            <span class=\"sr-only text-uppercase\">Loading...</span>\n                          </div>\n                        </div>\n                      </div>\n                      <h4 class=\"text-uppercase\">Loading Data</h4>\n                      <div class=\"col-sm-12 col-md-8 col-lg-5\">\n                        <p>We are fetching the data for you. It will be ready soon. Please wait and have fun. Thank you for your interest.</p>\n\n                      </div>\n                    </div>\n                    <div v-if=\"visitEntries.length<1 & loading===false\" class=\"card-body d-sm-none d-md-block px-5 d-flex flex-column justify-items-center align-items-center text-center\">\n                      <div class=\"p-5 py-0 pt-3\">\n                        <img :src=\"'./assets/images/no-results.png'\" class=\"img mb-4\"  alt=\"No search results\"/>\n                      </div>\n                      <h4>No Results To Show</h4>\n                      <p>Sorry, we could not find any results that match your search or filter criteria. Please try using different keywords or filters.</p>\n                    </div>\n                    \n                  </div>\n                </div>\n\n                <div class=\"card-footer bg-white\">\n                  <nav aria-label=\"Page navigation example \" class=\"d-flex align-items-center justify-content-between\">\n\n                    <div class=\"d-flex align-items-center\">\n                                            <span class=\"pr-3 pb-0 mb-0 font-13px\">\n                                                <span>Rows Per Page</span>\n                                            </span>\n                      <select class=\"form-select w-auto font-13px\" v-model=\"pageSize\">\n                        <option value=\"5\">5 Rows</option>\n                        <option value=\"10\">10 Rows</option>\n                        <option value=\"25\">25 Rows</option>\n                        <option value=\"50\">50 Rows</option>\n                        <option value=\"100\">100 Rows</option>\n                        <option value=\"150\">150 Rows</option>\n                        <option value=\"200\">200 Rows</option>\n                      </select>\n                    </div>\n\n                    <ul class=\"pagination\">\n                      <!-- add a class of disabled and an attribute of disabled when the current page is the first page -->\n                      <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                        <a class=\"page-link\" tabindex=\"-1\" @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</a>\n                      </li>\n                      <!-- replace the v-for directive with the pagination function call -->\n                      <li v-for=\"page in pagination(currentPage, totalPages, 3)\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\n                        <!-- check if the page is an ellipsis and display it as plain text -->\n                        <span v-if=\"page === '...'\" class=\"page-link\">{{ page }}</span>\n                        <!-- otherwise, display it as a clickable link -->\n                        <a v-else class=\"page-link\" @click=\"goToPage(page)\">{{ page }}</a>\n                      </li>\n                      <!-- add a class of disabled and an attribute of disabled when the current page is the last page -->\n                      <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                        <a class=\"page-link\"  @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</a>\n                      </li>\n                    </ul>\n                  </nav>\n                </div>\n\n              </div>\n            </div>\n            <!-- end col -->\n          </div>\n\n          <!-- end row -->\n        </div>\n        <!-- container-fluid -->\n      </div>\n      <!-- End Page-content -->\n      <footer class=\"footer \">\n        <div class=\"container-fluid \">\n          <div class=\"row \">\n            <div class=\"col-sm-6 \">\n\n            </div>\n            <div class=\"col-sm-6 \">\n\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n    <!-- end main content-->\n\n  </div>\n  <!-- END layout-wrapper -->\n\n  <!-- Right bar overlay-->\n  <div class=\"rightbar-overlay \"></div>\n\n\n  </body>\n\n</template>\n\n\n<script>\n/* eslint-disable */\nimport moment from 'moment'\nimport {biller, execute, executeDownload, getRight, patient} from \"@/api\";\nimport NavigationBar from \"@/components/Navigation\";\nimport router from \"@/router\";\nimport ToolBarPatient from \"@/components/master-patient/ToolBar.vue\";\n\nexport default {\n  name: \"PatientHistory\",\n  components: {ToolBarPatient, NavigationBar},\n  data() {\n    return {\n      patientInitials:\"\",\n\n      loading: false,\n      // set the initial current page as 1\n      currentPage: 1,\n      // set the total number of pages as 10 (you can change this according to your data source)\n      totalPages: 0,\n      // set the number of items per page as 5 (you can change this according to your preference)\n      pageSize: 10,\n      totalItems:0,\n\n      search:\"\",\n\n\n      patients: [\n        {\n          id: null,\n          patientID: null,\n          title: null,\n          names: null,\n          phoneNumber: null,\n          physicalAddress: null,\n          gender: null,\n          idNo: null,\n          dateOfBirth: null,\n          maritalStatus: null,\n          levelOfEducation: null,\n          occupation: null,\n          religion: null,\n          languages: null,\n          countyID: null,         // (Optional, can be removed if unused)\n          countyName: null,       // (Optional, can be removed if unused)\n          bloodGroup: null,\n          subCountyID: null,      // Missing field\n          subCountyName: null,    // Missing field\n          wardName: null,         // Missing field\n          wardID: null,           // Missing field\n          lastSeen: null,         // Missing field\n          email: null,            // Missing field\n          town: null              // Missing field\n        }\n      ],\n      receiptDetail:\n          {\n            id: null,\n            receiptNo: null,\n            billNo: null,\n            detailAmount: null,\n            receiptAmount: null,\n            billBalance: null,\n            costCenterNo: null,\n            accountNo: null,\n            incomeTypeDescription: null,\n            feeID: null,\n            feeDescription: null,\n            wardID: null,\n            subCountyID: null,\n            subCountyName: null,\n            wardName: null,\n            currency: null,\n            source: null,\n            transactionCode: null,\n            paidBy: null,\n            dateCreated: null,\n            dateModified: null,\n            createdBy: null,\n            modifiedBy: null,\n            isActive: null,\n            status: null,\n            zone: null,\n            departmentID: null,\n            department: null,\n            idNo: null,\n            phoneNumber: null,\n            names: null,\n            customerPhoneNumber: null,\n            description: null,\n            category: null,\n            incomeTypePrefix: null,\n            invoicedBy: null,\n            invoicedByPhoneNumber: null,\n            invoicedByIdNo: null,\n            code: null,\n            printed: null,\n            receiptedBy: null,\n            customers: null,\n            patientID: null\n          },\n      receiptDetails: [\n        {\n          id: null,\n          receiptNo: null,\n          billNo: null,\n          detailAmount: null,\n          receiptAmount: null,\n          billBalance: null,\n          costCenterNo: null,\n          accountNo: null,\n          incomeTypeDescription: null,\n          feeID: null,\n          feeDescription: null,\n          wardID: null,\n          subCountyID: null,\n          subCountyName: null,\n          wardName: null,\n          currency: null,\n          source: null,\n          transactionCode: null,\n          paidBy: null,\n          dateCreated: null,\n          dateModified: null,\n          createdBy: null,\n          modifiedBy: null,\n          isActive: null,\n          status: null,\n          zone: null,\n          departmentID: null,\n          department: null,\n          idNo: null,\n          phoneNumber: null,\n          names: null,\n          customerPhoneNumber: null,\n          description: null,\n          category: null,\n          incomeTypePrefix: null,\n          invoicedBy: null,\n          invoicedByPhoneNumber: null,\n          invoicedByIdNo: null,\n          code: null,\n          printed: null,\n          receiptedBy: null,\n          customers: null,\n          patientID: null\n        }\n      ],\n      receiptInfos: [\n        {\n          id: null,\n          receiptNo: null,\n          billNo: null,\n          feeID: null,\n          feeDescription: null,\n          billTotal: null,\n          receiptAmount: null,\n          billBalance: null,\n          customer: null,\n          clientPhoneNo: null,\n          description: null,\n          receiptDate: null,\n          printCount: null,\n          wardID: null,\n          subCountyID: null,\n          subCountyName: null,\n          wardName: null,\n          dateCreated: null,\n          dateModified: null,\n          createdBy: null,\n          modifiedBy: null,\n          printedBy: null,\n          updated: null,\n          isActive: null,\n          status: null,\n          zone: null,\n          departmentID: null,\n          department: null,\n          idNo: null,\n          phoneNumber: null,\n          names: null,\n          customerPhoneNumber: null,\n          category: null,\n          incomeTypePrefix: null,\n          quantity: null,\n          invoicedBy: null,\n          invoicedByPhoneNumber: null,\n          invoicedByIdNo: null,\n          code: null,\n          patientID: null\n        }\n      ],\n\n      patientsDetails:{\n        patient: {\n          id: null,\n          patientID: null,\n          title: null,\n          names: null,\n          phoneNumber: null,\n          gender: null,\n          idNo: null,\n          dateOfBirth: null,\n          maritalStatus: null,\n          levelOfEducation: null,\n          nationality:null,\n          occupation: null,\n          religion: null,\n          languages: null,\n          bloodGroup: null,\n          physicalAddress: null,\n          subCountyID: null,\n          subCountyName: null,\n          wardName: null,\n          wardID: null,\n          lastSeen: null,\n          lastUpdate: null,\n          email: null,\n          town: null,\n          dateCreated: null,\n          height: null,\n          weight\t: null,\n          bmi: null,\n          registrationFacility: null,\n          createdBy: null,\n          updatedBy: null,\n          lastSeenAt: null,\n          careCard: null\n        },\n        guarantor: {\n          id: null,\n          visitCode: null,\n          patientIDNo: null,\n          idNo: null,\n          names: null,\n          phoneNumber: null,\n          email: null,\n          physicalAddress: null,\n          relationship: null\n        },\n        kins: [\n          {\n            id: null,\n            patientIDNo: null,\n            idNo: null,\n            names: null,\n            phoneNumber: null,\n            address: null,\n            relationShip: null\n          },\n          {\n            id: null,\n            patientIDNo: null,\n            idNo: null,\n            names: null,\n            phoneNumber: null,\n            address: null,\n            relationShip: null\n          }\n        ],\n        visitEntries: {\n          id: null,\n          visitCode: null,\n          idNo: null,\n          names: null,\n          phoneNumber: null,\n          email: null,\n          reasonForVisit: null,\n          description: null,\n          departmentVisiting: null,\n          doctorNurse: null,\n          triage: null,\n          meansOfArrival: null,\n          payment: null,\n          dateCreated: null\n        },\n        nhif: {\n          id: null,\n          visitCode: null,\n          number: null,\n          policyholder: null\n        },\n        insurance: {\n          id: null,\n          visitCode: null,\n          provider: null,\n          policyNumber: null,\n          authorizationCode: null,\n          policyholder: null\n        },\n        insurances: [{\n          id: null,\n          visitCode: null,\n          provider: null,\n          policyNumber: null,\n          authorizationCode: null,\n          policyholder: null\n        }],\n        employer: {\n          id: null,\n          visitCode: null,\n          companyName: null,\n          companyID: null,\n          authorizationCode: null\n        },\n        chronicIllnesses:[\n          {\n            illness:null,\n            dateCreated:null\n          }\n        ],\n        allergies:[\n          {\n            allergy:null,\n            dateCreated:null\n          }\n        ],\n      },\n\n      visitEntries: [\n        {\n          id: null,\n          visitCode: null,\n          idNo: null,\n          names: null,\n          phoneNumber: null,\n          email: null,\n          reasonForVisit: null,\n          description: null,\n          departmentVisiting: null,\n          doctorNurse: null,\n          triage: null,\n          meansOfArrival: null,\n          payment: null,\n          dateCreated: null\n        }\n      ]\n\n\n\n    };\n  },\n  watch: {\n    //pagination code\n    // define a watcher for the pageSize property\n    pageSize(newPageSize) {\n      this.getPatient()//Todo to change here\n      // get the total number of items from your data source (you can change this according to your logic)\n      const totalItems = this.totalItems;\n      // calculate the new total pages by dividing the total items by the new page size and rounding up\n      const newTotalPages = Math.ceil(totalItems / newPageSize);\n      // update the totalPages data property with the new value\n      this.totalPages = newTotalPages;\n      // reset the current page to 1\n      this.currentPage = 1;\n\n    },\n\n    search(){\n      this.getPatient()\n    },\n    documentType(){\n      if(this.documentType === \"pdf\"){\n        // this.downloadReport()\n      }else if(this.documentType ===\"excel\"){\n        // this.downloadReport()\n      }else {\n\n      }\n\n    }\n\n  },\n  computed:{\n    //pagination code todo pagination\n    // calculate the start index of the items for the current page\n    startIndex() {\n      return (this.currentPage - 1) * this.pageSize;\n    },\n    // calculate the end index of the items for the current page\n    endIndex() {\n      return this.currentPage * this.pageSize;\n    },\n  },\n  mounted() {\n\n    this.dateFrom = moment().format('YYYY-MM-DD')\n    this.dateTo = moment().format('YYYY-MM-DD')\n\n\n    // this.dateTo = moment().endOf('month').format('YYYY-MM-DD')\n\n    this.$watch('dateFrom', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {\n\n      } else {\n        this.getSubCountiesRevenue()\n      }\n\n    })\n    this.$watch('dateTo', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {\n\n      } else {\n        this.getSubCountiesRevenue()\n      }\n    })\n    this.menuAccess()\n\n    this.getVisitEntries()\n    this.getPatientDetails()\n\n  },\n  methods: {\n\n    menuAccess(){\n\n      const data = new FormData();\n      data.append(\"function\", \"menuAccess\");\n      data.append(\"menu\", \"Reports Sub County\");\n      data.append(\"sessionNames\", sessionStorage.getItem(\"sessionNames\"));\n      data.append(\"sessionIdNo\",  sessionStorage.getItem(\"sessionIdNo\"));\n      execute(data,biller)\n          .then((res) => {\n            // alert(res.data.message);\n          })\n          .catch((e) => {\n            // alert(e.message);\n          });\n\n    },\n\n    getRight(type){\n      return getRight(type)\n    },\n    //pagination code todo pagination\n    pagination(currentPage, totalPages, maxVisibleButtons) {\n      //initialize an empty array for the pages\n      let pages = [];\n      //calculate the start and end indices of the visible buttons\n      let start = currentPage - Math.floor(maxVisibleButtons / 2);\n      let end = currentPage + Math.floor(maxVisibleButtons / 2);\n      //adjust the start and end indices if they are out of bounds\n      if (start < 1) {\n        start = 1;\n        end = start + maxVisibleButtons - 1;\n        if (end > totalPages) {\n          end = totalPages;\n        }\n      }\n      if (end > totalPages) {\n        end = totalPages;\n        start = end - maxVisibleButtons + 1;\n        if (start < 1) {\n          start = 1;\n        }\n      }\n      //loop through the start and end indices and push the pages to the array\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      //add an ellipsis at the beginning if there are more pages before the start index\n      if (start > 1) {\n        pages.unshift(\"...\");\n      }\n      //add an ellipsis at the end if there are more pages after the end index\n      if (end < totalPages) {\n        pages.push(\"...\");\n      }\n// return the array of pages\n      return pages;\n    },\n    // define a method to go to the previous page\n    prevPage() {\n      // check if the current page is not the first page\n      if (this.currentPage > 1) {\n        // decrement the current page by 1\n        this.currentPage--;\n        this.getPatient()//Todo change\n      }\n    },\n    // define a method to go to the next page\n    nextPage() {\n      // check if the current page is not the last page\n      if (this.currentPage < this.totalPages) {\n        // increment the current page by 1\n        this.currentPage++;\n        this.getPatient()//Todo change\n      }\n    },\n    // define a method to go to a specific page\n    goToPage(page) {\n      // check if the page is valid and not equal to the current page\n      if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n        // set the current page to the given page\n        this.currentPage = page;\n        this.getPatient()//Todo change\n      }\n    },\n\n    formatDate(date) {\n      let d = new Date(date);\n      let day = d.getDate();\n      let month = d.toLocaleString('en-US', { month: 'short' });\n      let year = d.getFullYear();\n\n      let suffix = '';\n      if (day % 10 === 1 && day !== 11) {\n        suffix = 'st';\n      } else if (day % 10 === 2 && day !== 12) {\n        suffix = 'nd';\n      } else if (day % 10 === 3 && day !== 13) {\n        suffix = 'rd';\n      } else {\n        suffix = 'th';\n      }\n      return `${day}${suffix} ${month} ${year}`;\n    },\n    showDate() {\n      const dateObj = new Date();\n      const currentDate =\n          dateObj.getDate() +\n          \"/\" +\n          dateObj.getMonth() +\n          \"/\" +\n          dateObj.getFullYear();\n      return currentDate;\n    },\n    gotTo(route,patientID) {\n      sessionStorage.setItem(\"selectedSub\",route)\n      sessionStorage.setItem(\"patientID\",patientID)\n      sessionStorage.setItem(\"patientIDNo\",patientID)\n      router.push(route)\n    },\n    gotToAll(route) {\n      sessionStorage.setItem(\"currentPage\",route)\n      sessionStorage.setItem(\"dateTo\", this.dateTo)\n      sessionStorage.setItem(\"dateFrom\", this.dateFrom)\n      sessionStorage.setItem(\"subCountyName\", \"ALL SUB COUNTIES\")\n      sessionStorage.setItem(\"subCountyID\", \"\")\n      //todo to check on this figures\n      sessionStorage.setItem(\"totalTransactions\", this.totalTransactions)\n      sessionStorage.setItem(\"amountTotal\", this.totalAmount)\n      sessionStorage.setItem(\"totalAgents\", this.totalAgents)\n      sessionStorage.setItem(\"totalZones\", this.totalZones)\n      router.push(route)\n    },\n    formatPrice(value) {\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n    numberFormat(num) {\n      const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n      return britishNumberFormatter.format(num)\n    },\n    getVisitEntries() {\n      this.loading = true\n      const data = new FormData();\n      data.append(\"function\", \"getVisitEntries\");\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      data.append(\"page\", this.currentPage);\n      data.append(\"rows_per_page\", this.pageSize);\n      data.append(\"keyword\", this.search);\n      data.append(\"idNo\", sessionStorage.getItem(\"patientIDNo\"));\n      execute(data, patient)\n          .then((res) => {\n            this.loading = false\n            if (res.data.success) {\n              this.visitEntries = res.data.data.visitEntries\n\n              //todo pagination\n              this.totalItems = res.data.data.totalItems\n              this.totalPages =  Math.ceil(this.totalItems / this.pageSize);\n\n            } else {\n              //alert(res.data.data.message);\n            }\n          })\n          .catch((e) => {\n            alert(e.message);\n          });\n    },\n    getPatientDetails() {\n      const data = new FormData();\n      data.append(\"function\", \"getPatientDetails\");\n      data.append(\"keyword\", sessionStorage.getItem(\"patientID\"));\n      execute(data, patient)\n          .then((res) => {\n            this.loading = false\n            if (res.data.success) {\n              this.patientsDetails = res.data.data\n\n              this.patientInitials =  this.patientsDetails.patient.names ? this.patientsDetails.patient.names.slice(0, 2).toUpperCase() : '';\n\n            } else {\n              //alert(res.data.data.message);\n            }\n          })\n          .catch((e) => {\n            alert(e.message);\n          });\n    },\n\n  },\n}\n</script>\n\n\n\n<style>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}