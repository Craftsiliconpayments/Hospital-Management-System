{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/* eslint-disable */\nimport NavigationBar from \"@/components/Navigation\";\nimport router from \"@/router\";\nimport { paysol, biller, execute, execute2, executeDownload, getRight } from \"@/api\";\nimport moment from 'moment';\nexport default {\n  name: \"BillsReceipted\",\n  components: {\n    NavigationBar\n  },\n  data() {\n    return {\n      loading: false,\n      // set the initial current page as 1\n      currentPage: 1,\n      // set the total number of pages as 10 (you can change this according to your data source)\n      totalPages: 0,\n      // set the number of items per page as 5 (you can change this according to your preference)\n      pageSize: 10,\n      summary: {\n        count: 0,\n        total: 0\n      },\n      totalAmount: null,\n      paymentMode: '',\n      download: 'Download Report',\n      dateFrom: '',\n      dateTo: '',\n      searchValue: \"\",\n      customers: [{\n        account_from: \"\",\n        count: \"\",\n        names: \"\"\n      }],\n      transactions: [{\n        id: \"\",\n        payment_type: \"\",\n        account_to: \"\",\n        account_from: \"\",\n        transaction_code: \"\",\n        amount: \"\",\n        account_ref: \"\",\n        transaction_desc: \"-\",\n        date: \"\",\n        names: \"\"\n      }],\n      //###########\n\n      monthNames: ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      monthName: '',\n      month: '',\n      receiptNo: '',\n      receiptDetail: {\n        id: \"151\",\n        receiptNo: \"BLL2023041621063411\",\n        billNo: \"BLL0416090620\",\n        detailAmount: \"20\",\n        receiptAmount: \"20\",\n        billBalance: \"0\",\n        costCenterNo: \"\",\n        accountNo: \",\",\n        incomeTypeDescription: \"Market Fees,\",\n        feeID: \"274,\",\n        wardID: \"472761372\",\n        subCountyID: \"47276\",\n        currency: \"KES\",\n        source: \"CASH\",\n        transactionCode: \"BLL0416090620\",\n        paidBy: \"#\",\n        dateCreated: \"2023-04-16 09:06:34\",\n        dateModified: \"2023-04-16 09:06:34\",\n        createdBy: \"1\",\n        modifiedBy: \"#\",\n        isActive: \"1\",\n        statu: \"PAID\"\n      },\n      receiptDetails: [],\n      receiptInfos: []\n    };\n  },\n  watch: {\n    //pagination code\n    // define a watcher for the pageSize property\n    pageSize(newPageSize) {\n      this.getTransactions(\"\");\n      // get the total number of items from your data source (you can change this according to your logic)\n      const totalItems = this.summary.count;\n      // calculate the new total pages by dividing the total items by the new page size and rounding up\n      const newTotalPages = Math.ceil(totalItems / newPageSize);\n      // update the totalPages data property with the new value\n      this.totalPages = newTotalPages;\n      // reset the current page to 1\n      this.currentPage = 1;\n    }\n  },\n  computed: {\n    totalReceiptAmount() {\n      return this.formatPrice(this.receiptDetails.reduce((sum, billDetail) => sum + parseInt(billDetail.receiptAmount), 0));\n    }\n  },\n  mounted() {\n    this.dateFrom = moment().format('YYYY-MM-DD');\n    this.dateTo = moment().format('YYYY-MM-DD');\n    this.getTransactions();\n    this.$watch('searchValue', function (newValue) {\n      this.getTransactions(newValue);\n    });\n    this.$watch('dateFrom', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {} else {\n        this.getTransactions(newValue);\n      }\n    });\n    this.$watch('dateTo', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {} else {\n        this.getTransactions(newValue);\n      }\n    });\n    this.$watch('paymentMode', function () {\n      this.searchValue = this.paymentMode;\n    });\n    //####\n    const d = new Date();\n    this.month = d.getMonth();\n    this.monthName = this.getCurrentMonth() + \" \" + this.getCurrentYear();\n    this.menuAccess();\n  },\n  methods: {\n    //pagination code\n    pagination(currentPage, totalPages, maxVisibleButtons) {\n      //initialize an empty array for the pages\n      let pages = [];\n      //calculate the start and end indices of the visible buttons\n      let start = currentPage - Math.floor(maxVisibleButtons / 2);\n      let end = currentPage + Math.floor(maxVisibleButtons / 2);\n      //adjust the start and end indices if they are out of bounds\n      if (start < 1) {\n        start = 1;\n        end = start + maxVisibleButtons - 1;\n        if (end > totalPages) {\n          end = totalPages;\n        }\n      }\n      if (end > totalPages) {\n        end = totalPages;\n        start = end - maxVisibleButtons + 1;\n        if (start < 1) {\n          start = 1;\n        }\n      }\n      //loop through the start and end indices and push the pages to the array\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      //add an ellipsis at the beginning if there are more pages before the start index\n      if (start > 1) {\n        pages.unshift(\"...\");\n      }\n      //add an ellipsis at the end if there are more pages after the end index\n      if (end < totalPages) {\n        pages.push(\"...\");\n      }\n      // return the array of pages\n      return pages;\n    },\n    // define a method to go to the previous page\n    prevPage() {\n      // check if the current page is not the first page\n      if (this.currentPage > 1) {\n        // decrement the current page by 1\n        this.currentPage--;\n        this.getTransactions(\"\");\n      }\n    },\n    // define a method to go to the next page\n    nextPage() {\n      // check if the current page is not the last page\n      if (this.currentPage < this.totalPages) {\n        // increment the current page by 1\n        this.currentPage++;\n        this.getTransactions(\"\");\n      }\n    },\n    // define a method to go to a specific page\n    goToPage(page) {\n      // check if the page is valid and not equal to the current page\n      if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n        // set the current page to the given page\n        this.currentPage = page;\n        this.getTransactions(\"\");\n      }\n    },\n    menuAccess() {\n      const data = new FormData();\n      data.append(\"function\", \"menuAccess\");\n      data.append(\"menu\", \"Transactions\");\n      data.append(\"sessionNames\", sessionStorage.getItem(\"sessionNames\"));\n      data.append(\"sessionIdNo\", sessionStorage.getItem(\"sessionIdNo\"));\n      execute(data, biller).then(() => {\n        // alert(res.data.message);\n      }).catch(() => {\n        // alert(e.message);\n      });\n    },\n    getRight(type) {\n      return getRight(type);\n    },\n    downloadTransactions() {\n      this.download = \"Please wait..\";\n      const data = new FormData();\n      data.append(\"function\", \"downloadTransactions\");\n      data.append(\"keyword\", this.searchValue);\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      executeDownload(data, biller).then(response => {\n        this.download = \"Download Report\";\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(response.data);\n        link.download = this.dateFrom + ' to ' + this.dateTo + \" Transactions.csv\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    },\n    getTransactions() {\n      this.transactions.splice(0);\n      this.loading = true;\n      const data = new FormData();\n      data.append(\"function\", \"getTransactionsPagination\");\n      data.append(\"keyword\", this.searchValue);\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      data.append(\"page\", this.currentPage);\n      data.append(\"rows_per_page\", this.pageSize);\n      execute2(data, biller).then(res => {\n        this.loading = false;\n        if (res.data.success) {\n          this.summary.count = 0;\n          this.summary.total = 0;\n          this.totalAmount = null;\n          this.transactions = res.data.data.Transactions;\n          this.summary = res.data.data.summary;\n          this.totalPages = Math.ceil(this.summary.count / this.pageSize);\n\n          //Initialize the accumulator to 0\n          this.totalAmount = this.transactions.reduce((acc, cur) => {\n            let amount = Number(cur.amount);\n            return acc + amount;\n          }, 0);\n        } else {\n          alert(res.data.message);\n        }\n      }).catch(e => {\n        //alert(e.message);\n        this.message = e.message;\n      });\n    },\n    getCustomers() {\n      const data = new FormData();\n      data.append(\"function\", \"getCustomers\");\n      data.append(\"searchValue\", this.searchValue);\n      execute(data, biller).then(res => {\n        this.entries = [];\n        if (res.data.success) {\n          this.customers = res.data.data.customers;\n        } else {\n          alert(res.data.message);\n        }\n      }).catch(e => {\n        //alert(e.message);\n        this.message = e.message;\n      });\n    },\n    getCustomersHistory(account_from) {\n      const data = new FormData();\n      data.append(\"function\", \"getCustomersHistory\");\n      data.append(\"account_from\", account_from);\n      execute(data, biller).then(res => {\n        if (res.data.success) {\n          this.transactions = res.data.data.transactions;\n        } else {\n          alert(res.data.message);\n        }\n      }).catch(e => {\n        //alert(e.message);\n        this.message = e.message;\n      });\n    },\n    //#########\n    getCurrentMonth() {\n      const d = new Date();\n      const monthName = this.monthNames[d.getMonth()];\n      console.log(monthName);\n      return monthName;\n    },\n    getMonthName() {\n      const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      const d = new Date();\n      const monthName = monthNames[d.getMonth()];\n      console.log(monthName);\n      return monthName;\n    },\n    getCurrentYear() {\n      const date = new Date();\n      const currentYear = date.getFullYear();\n      console.log(currentYear); // Output: 2023\n      return currentYear;\n    },\n    formatPrice(value) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'KES',\n        minimumFractionDigits: 2\n      });\n      return formatter.format(value);\n    },\n    gotTo(route) {\n      router.push(route);\n    }\n  }\n};","map":{"version":3,"names":["NavigationBar","router","paysol","biller","execute","execute2","executeDownload","getRight","moment","name","components","data","loading","currentPage","totalPages","pageSize","summary","count","total","totalAmount","paymentMode","download","dateFrom","dateTo","searchValue","customers","account_from","names","transactions","id","payment_type","account_to","transaction_code","amount","account_ref","transaction_desc","date","monthNames","monthName","month","receiptNo","receiptDetail","billNo","detailAmount","receiptAmount","billBalance","costCenterNo","accountNo","incomeTypeDescription","feeID","wardID","subCountyID","currency","source","transactionCode","paidBy","dateCreated","dateModified","createdBy","modifiedBy","isActive","statu","receiptDetails","receiptInfos","watch","newPageSize","getTransactions","totalItems","newTotalPages","Math","ceil","computed","totalReceiptAmount","formatPrice","reduce","sum","billDetail","parseInt","mounted","format","$watch","newValue","d","Date","getMonth","getCurrentMonth","getCurrentYear","menuAccess","methods","pagination","maxVisibleButtons","pages","start","floor","end","i","push","unshift","prevPage","nextPage","goToPage","page","FormData","append","sessionStorage","getItem","then","catch","type","downloadTransactions","response","link","document","createElement","href","URL","createObjectURL","body","appendChild","click","removeChild","splice","res","success","Transactions","acc","cur","Number","alert","message","e","getCustomers","entries","getCustomersHistory","console","log","getMonthName","currentYear","getFullYear","value","formatter","Intl","NumberFormat","style","minimumFractionDigits","gotTo","route"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/biller/meru-biller/src/components/Transactions.vue"],"sourcesContent":["<template>\n    <div>\n        <head>\n\n            <meta charset=\"utf-8\" />\n            <title>Biller Keep Our Roads safe</title>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <meta content=\"Rental management system by Nouveta LTD\" name=\"description\" />\n            <meta content=\"Kelvin Njuguna\" name=\"author\" />\n            <!-- App favicon -->\n            <link rel=\"shortcut icon\" href=\"assets/images/favicon.png\">\n            <!-- droping file -->\n            <link href=\"assets/libs/dropzone/min/dropzone.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n            <!-- DataTables -->\n            <link href=\"assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n            <link href=\"assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n            <!-- Bootstrap Css -->\n            <link href=\"assets/css/bootstrap.min.css\" id=\"bootstrap-style\" rel=\"stylesheet\" type=\"text/css\" />\n            <!-- Bootstrap select styling -->\n            <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n            <!-- Icons Css -->\n            <link href=\"assets/css/icons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n            <!-- App Css-->\n            <link href=\"assets/css/app.min.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n            <!-- custom Css-->\n            <link href=\"assets/css/custom.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n\n        </head>\n        <body @contextmenu.prevent data-sidebar=\"dark\">\n        <NavigationBar/>\n         <div id=\"content\" class=\"content-minimize\">\n\n            <div class=\"page-content\">\n                <div class=\"container-fluid\">\n\n                    <!-- start page title -->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n                                <h4 class=\"mb-sm-0 font-size-18\">Transactions</h4>\n\n                                <div class=\"page-title-right\">\n                                    <ol class=\"breadcrumb m-0\">\n                                        <li class=\"breadcrumb-item\"><a href=\"javascript: void(0);\" @click=\"gotTo('dashboard')\">Dashboards</a></li>\n                                        <li class=\"breadcrumb-item\"><a href=\"javascript: void(0);\" @click=\"gotTo('receipts')\">Receipts</a></li>\n                                    </ol>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end page title -->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card\">\n                                <div style=\"margin-left: 20px\" class=\"card-header bg-white pt-0 pr-0 p-0 d-flex justify-content-between align-items-center w-100 border-bottom\">\n\n                                    <div class=\"btn-toolbar p-3 d-flex justify-content-between align-items-center w-100\" role=\"toolbar\">\n                                        <h4 class=\"card-title text-capitalize mb-0 \">\n                                            Transactions for {{monthName}}\n                                        </h4>\n                                    </div>\n                                    <div class=\"btn-toolbar p-3 align-items-center d-none animated delete-tool-bar\" role=\"toolbar\">\n                                        <button type=\"button\" class=\"btn btn-primary waves-effect btn-label waves-light me-3\"><i class=\"mdi mdi-printer label-icon\"></i> Print Selected Invoices</button>\n                                    </div>\n                                </div>\n\n                                <div class=\"row col-12\" style=\"margin-left: 20px\">\n                                    <div class=\"col-4\">\n                                        <form style=\"margin-left: 20px; width: auto\" class=\"app-search d-none d-lg-block\">\n                                            <div class=\"position-relative\">\n                                                <input v-model=\"searchValue\" class=\"form-control\" placeholder=\"Search...\" type=\"text\">\n                                                <span class=\"bx bx-search-alt\"></span>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div class=\"col-2\">\n                                        <div>\n                                            <label class=\"form-label\">Payment mode</label>\n                                            <select class=\"form-select w-auto font-13px \" v-model=\"paymentMode\">\n                                                <option value=\"\">All Payment</option>\n                                                <option value=\"MPESA\">MPESA</option>\n                                                <option value=\"BANK\">BANK</option>\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-2\">\n                                        <div>\n                                            <label class=\"form-label\">Date From</label>\n                                            <input v-model=\"dateFrom\" class=\"form-control\" type=\"date\">\n                                        </div>\n                                    </div>\n                                    <div class=\"col-2\">\n                                        <div>\n                                            <label class=\"form-label\">Date to</label>\n                                            <input v-model=\"dateTo\" class=\"form-control\" type=\"date\">\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-2\">\n                                        <div>\n                                            <label class=\"form-label\">Download Excel</label>\n                                            <div class=\"d-flex\">\n                                                <a v-if=\"getRight('DOWNLOAD REPORTS')\" @click=\"downloadTransactions()\"  type=\"button\" class=\"btn btn-primary dropdown-toggle option-selector me-3 text-capitalize\">\n                                                    <i class=\"mdi mdi-download  font-size-10\"></i> <span class=\"pl-1 d-md-inline\">{{download}}</span>\n                                                </a>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive overflow-visible\">\n\n                                        <table class=\"table align-middle table-hover  contacts-table table-striped\">\n                                            <thead class=\"table-light\">\n                                            <tr class=\"table-dark\">\n                                                <th>Payment Type</th>\n                                                <th>Account From</th>\n                                                <th>Transaction Code</th>\n                                                <th>Amount</th>\n                                                <th>Account Ref</th>\n                                                <th>Date</th>\n                                                <th>Names</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                            <tr  v-for=\"(item,index) in transactions\" :key=\"item.id\">\n\n                                                <td>{{index+1}}. {{item.payment_type}}</td>\n                                                <td class=\"text-capitalize\">{{item.account_from}}</td>\n                                                <td>{{item.transaction_code}}</td>\n                                                <td class=\"text-capitalize\"><b>KES {{item.amount}}</b></td>\n                                                <td class=\"text-capitalize\">{{item.account_ref}}</td>\n                                                <td class=\"text-capitalize\">{{item.date}}</td>\n                                                <td class=\"text-capitalize\"><b>{{item.names}}</b></td>\n\n                                            </tr>\n                                            </tbody>\n                                            <tfoot class=\"table-dark\">\n                                            <tr>\n                                                <th class=\"text-capitalize text-nowrap\" colspan=\"2\">{{transactions.length}}</th>\n                                                <td class=\"text-nowrap text-right \" colspan=\"5\">\n                                                    <span class=\"fw-semibold \">TOTAL: {{transactions.length}}</span>\n                                                </td>\n                                            </tr>\n                                            </tfoot>\n                                        </table>\n\n\n                                        <div v-if=\"loading\" class=\"card-body px-5 d-flex flex-column justify-items-center align-items-center text-center d-flex justify-content-center\">\n                                            <div class=\"p-5 py-0 pt-3\">\n                                                <div class=\"p-5\">\n                                                    <div class=\"spinner-border text-info m-1\" role=\"status\">\n                                                        <span class=\"sr-only text-uppercase\">Loading...</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <h4 class=\"text-uppercase\">Loading Data</h4>\n                                            <div class=\"col-sm-12 col-md-8 col-lg-5\">\n                                                <p>We are fetching the data for you. It will be ready soon. Please wait and have fun. Thank you for your interest.</p>\n\n                                            </div>\n                                        </div>\n                                        <div v-if=\"transactions.length<1 & loading===false\" class=\"card-body d-sm-none d-md-block px-5 d-flex flex-column justify-items-center align-items-center text-center\">\n                                            <div class=\"p-5 py-0 pt-3\">\n                                                <img :src=\"'./assets/images/no-results.png'\" class=\"img mb-4\"  alt=\"No search results\"/>\n                                            </div>\n                                            <h4>No Results To Show</h4>\n                                            <p>Sorry, we could not find any results that match your search or filter criteria. Please try using different keywords or filters.</p>\n                                        </div>\n                                    </div>\n                                </div>\n\n                              <div class=\"card-footer bg-white\">\n                                <nav aria-label=\"Page navigation example \"\n                                     class=\"d-flex align-items-center justify-content-between\">\n\n                                  <div class=\"d-flex align-items-center\">\n                                            <span class=\"pr-3 pb-0 mb-0 font-13px\">\n                                                <span>Rows Per Page</span>\n                                            </span>\n                                    <select class=\"form-select w-auto font-13px \" v-model=\"pageSize\">\n                                      <option value=\"10\">10 Rows</option>\n                                      <option value=\"25\">25 Rows</option>\n                                      <option value=\"50\">50 Rows</option>\n                                      <option value=\"100\">100 Rows</option>\n                                      <option value=\"150\">150 Rows</option>\n                                      <option value=\"200\">200 Rows</option>\n                                      <option value=\"500\">500 Rows</option>\n                                      <option value=\"1000\">1000 Rows</option>\n                                      <option value=\"1000000000000000000\">All Rows</option>\n                                    </select>\n                                  </div>\n\n                                  <ul class=\"pagination\">\n                                    <!-- add a class of disabled and an attribute of disabled when the current page is the first page -->\n                                    <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                                      <a class=\"page-link\" tabindex=\"-1\" @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</a>\n                                    </li>\n                                    <!-- replace the v-for directive with the pagination function call -->\n                                    <li v-for=\"page in pagination(currentPage, totalPages, 3)\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\n                                      <!-- check if the page is an ellipsis and display it as plain text -->\n                                      <span v-if=\"page === '...'\" class=\"page-link\">{{ page }}</span>\n                                      <!-- otherwise, display it as a clickable link -->\n                                      <a v-else class=\"page-link\" @click=\"goToPage(page)\">{{ page }}</a>\n                                    </li>\n                                    <!-- add a class of disabled and an attribute of disabled when the current page is the last page -->\n                                    <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                                      <a class=\"page-link\"  @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</a>\n                                    </li>\n                                  </ul>\n\n\n                                </nav>\n                              </div>\n\n                            </div>\n                        </div>\n                        <!-- end col -->\n                    </div>\n\n                    <!-- end row -->\n                </div>\n                <!-- container-fluid -->\n            </div>\n            <!-- End Page-content -->\n\n            <!-- receipting modal -->\n            <div id=\"receiptDetail\" class=\"modal fade receipting-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"myLargeModalLabel\">Receipt Details</h5>\n                            <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                    <address>\n                                        <strong class=\"text-capitalize\">Received from:</strong><br>\n                                        {{receiptDetail.paidBy}}<br>\n\n                                    </address>\n                                </div>\n                                <div class=\"col-sm-6 text-sm-end\">\n                                    <address class=\"mt-2 mt-sm-0\">\n                                        <strong>Payment Method</strong><br>\n                                        <span class=\"fw-medium\">{{receiptDetail.source}}</span><br>\n                                        On {{receiptDetail.dateCreated}}\n                                    </address>\n                                </div>\n                            </div>\n                            <div class=\"col-12\">\n                                <div class=\"py-2 mt-3\">\n                                    <h3 class=\"font-size-15 fw-bold\">{{receiptDetail.receiptNo}}</h3>\n                                </div>\n                            </div>\n                            <div class=\"col-12\">\n                                <div class=\"table-responsive\">\n                                    <table class=\"table table-nowrap vertical-align-middle\">\n                                        <thead class=\"bg-light\">\n                                        <tr>\n                                            <th style=\"width: 70px;\">No.</th>\n                                            <th>Description</th>\n                                            <th class=\"text-end\">Amount</th>\n\n                                        </tr>\n                                        </thead>\n                                        <tfoot class=\"bg-light\">\n                                        <tr>\n                                            <td colspan=\"2\" class=\"border-0 text-end text-right\">\n                                                <strong>Total</strong>\n                                            </td>\n                                            <td class=\"border-0 text-end\">\n                                                <h5 class=\"m-0 text-uppercase fw-bold\">{{formatPrice(receiptDetail.receiptAmount)}}</h5>\n                                            </td>\n\n                                        </tr>\n                                        </tfoot>\n                                        <tbody>\n                                        <tr v-for=\"(item, index) in receiptInfos\" :value=\"item\" :key=\"index\" title=\"Driving Without identification plates affixed or plates not fixed in the prescribed manner\">\n                                            <td>{{index+1}}</td>\n                                            <td>\n                                                <p class=\"the-bill-item mb-0 p-0 m-0\">{{item.description}}</p>\n                                            </td>\n                                            <td class=\"text-end\">{{formatPrice(item.receiptAmount)}}</td>\n\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n\n                            <a @click=\"printReceipt()\" type=\"button\" target=\"_blank\" class=\"btn btn-primary waves-effect waves-light\">\n                                <i class=\"mdi mdi-printer font-size-16 align-middle me-2\"></i> Print receipt\n                            </a>\n                        </div>\n                    </div>\n                    <!-- /.modal-content -->\n                </div>\n                <!-- /.modal-dialog -->\n            </div>\n            <!-- end of receipting modal -->\n\n            <footer class=\"footer \">\n                <div class=\"container-fluid \">\n                    <div class=\"row \">\n                        <div class=\"col-sm-6 \">\n                            ©County\n                        </div>\n                        <div class=\"col-sm-6 \">\n                            <div class=\"text-sm-end d-sm-block \">\n                                Best Birdy Billing system.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n        </body>\n\n    </div>\n</template>\n\n<script>\n    /* eslint-disable */\n    import NavigationBar from \"@/components/Navigation\";\n    import router from \"@/router\";\n    import {paysol, biller, execute, execute2, executeDownload, getRight} from \"@/api\";\n    import moment from 'moment';\n\n    export default {\n        name: \"BillsReceipted\",\n        components: {NavigationBar},\n\n        data() {\n            return{\n              loading: false,\n              // set the initial current page as 1\n              currentPage: 1,\n              // set the total number of pages as 10 (you can change this according to your data source)\n              totalPages: 0,\n              // set the number of items per page as 5 (you can change this according to your preference)\n              pageSize: 10,\n              summary: {\n                count: 0,\n                total: 0\n              },\n\n\n              totalAmount: null,\n\n                paymentMode:'',\n                download:'Download Report',\n                dateFrom:'',\n                dateTo:'',\n                searchValue:\"\",\n                customers:[ {\n                    account_from: \"\",\n                    count: \"\",\n                    names: \"\"\n                }],\n                transactions:[{\n                    id: \"\",\n                    payment_type: \"\",\n                    account_to: \"\",\n                    account_from: \"\",\n                    transaction_code: \"\",\n                    amount: \"\",\n                    account_ref: \"\",\n                    transaction_desc: \"-\",\n                    date: \"\",\n                    names: \"\"\n                }],\n                //###########\n\n                monthNames: ['','January','February','March','April','May','June','July','August','September','October','November','December'],\n                monthName:'',\n                month:'',\n                receiptNo:'',\n                receiptDetail:{\n                    id: \"151\",\n                    receiptNo: \"BLL2023041621063411\",\n                    billNo: \"BLL0416090620\",\n                    detailAmount: \"20\",\n                    receiptAmount: \"20\",\n                    billBalance: \"0\",\n                    costCenterNo: \"\",\n                    accountNo: \",\",\n                    incomeTypeDescription: \"Market Fees,\",\n                    feeID: \"274,\",\n                    wardID: \"472761372\",\n                    subCountyID: \"47276\",\n                    currency: \"KES\",\n                    source: \"CASH\",\n                    transactionCode: \"BLL0416090620\",\n                    paidBy: \"#\",\n                    dateCreated: \"2023-04-16 09:06:34\",\n                    dateModified: \"2023-04-16 09:06:34\",\n                    createdBy: \"1\",\n                    modifiedBy: \"#\",\n                    isActive: \"1\",\n                    statu: \"PAID\"\n                },\n                receiptDetails:[],\n                receiptInfos:[]\n            }\n        },\n         watch: {\n        //pagination code\n        // define a watcher for the pageSize property\n        pageSize(newPageSize) {\n          this.getTransactions(\"\")\n          // get the total number of items from your data source (you can change this according to your logic)\n          const totalItems = this.summary.count;\n          // calculate the new total pages by dividing the total items by the new page size and rounding up\n          const newTotalPages = Math.ceil(totalItems / newPageSize);\n          // update the totalPages data property with the new value\n          this.totalPages = newTotalPages;\n          // reset the current page to 1\n          this.currentPage = 1;\n\n        },\n\n\n      },\n        computed:{\n            totalReceiptAmount() {\n                return this.formatPrice(this.receiptDetails.reduce((sum, billDetail) => sum + parseInt(billDetail.receiptAmount), 0));\n            }\n        },\n        mounted() {\n            this.dateFrom =  moment().format('YYYY-MM-DD')\n            this.dateTo = moment().format('YYYY-MM-DD')\n            this.getTransactions()\n\n            this.$watch('searchValue', function(newValue) {\n                this.getTransactions(newValue)\n            })\n            this.$watch('dateFrom', function(newValue) {\n                if(this.dateFrom==='' || this.dateTo===''){\n\n                }else{\n                    this.getTransactions(newValue)\n                }\n\n            })\n            this.$watch('dateTo', function(newValue) {\n                if(this.dateFrom==='' || this.dateTo===''){\n\n                }else{\n                    this.getTransactions(newValue)\n                }\n            })\n\n            this.$watch('paymentMode', function() {\n                this.searchValue = this.paymentMode\n            })\n            //####\n            const d = new Date();\n            this.month =d.getMonth();\n            this.monthName = this.getCurrentMonth()+\" \"+ this.getCurrentYear()\n\n          this.menuAccess()\n        },\n\n        methods: {\n          //pagination code\n          pagination(currentPage, totalPages, maxVisibleButtons) {\n            //initialize an empty array for the pages\n            let pages = [];\n            //calculate the start and end indices of the visible buttons\n            let start = currentPage - Math.floor(maxVisibleButtons / 2);\n            let end = currentPage + Math.floor(maxVisibleButtons / 2);\n            //adjust the start and end indices if they are out of bounds\n            if (start < 1) {\n              start = 1;\n              end = start + maxVisibleButtons - 1;\n              if (end > totalPages) {\n                end = totalPages;\n              }\n            }\n            if (end > totalPages) {\n              end = totalPages;\n              start = end - maxVisibleButtons + 1;\n              if (start < 1) {\n                start = 1;\n              }\n            }\n            //loop through the start and end indices and push the pages to the array\n            for (let i = start; i <= end; i++) {\n              pages.push(i);\n            }\n            //add an ellipsis at the beginning if there are more pages before the start index\n            if (start > 1) {\n              pages.unshift(\"...\");\n            }\n            //add an ellipsis at the end if there are more pages after the end index\n            if (end < totalPages) {\n              pages.push(\"...\");\n            }\n// return the array of pages\n            return pages;\n          },\n          // define a method to go to the previous page\n          prevPage() {\n            // check if the current page is not the first page\n            if (this.currentPage > 1) {\n              // decrement the current page by 1\n              this.currentPage--;\n              this.getTransactions(\"\")\n            }\n          },\n          // define a method to go to the next page\n          nextPage() {\n            // check if the current page is not the last page\n            if (this.currentPage < this.totalPages) {\n              // increment the current page by 1\n              this.currentPage++;\n              this.getTransactions(\"\")\n            }\n          },\n          // define a method to go to a specific page\n          goToPage(page) {\n            // check if the page is valid and not equal to the current page\n            if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n              // set the current page to the given page\n              this.currentPage = page;\n              this.getTransactions(\"\")\n            }\n          },\n\n        \n          menuAccess(){\n\n          const data = new FormData();\n          data.append(\"function\", \"menuAccess\");\n          data.append(\"menu\", \"Transactions\");\n          data.append(\"sessionNames\", sessionStorage.getItem(\"sessionNames\"));\n          data.append(\"sessionIdNo\",  sessionStorage.getItem(\"sessionIdNo\"));\n          execute(data,biller)\n              .then(() => {\n                // alert(res.data.message);\n              })\n              .catch(() => {\n                // alert(e.message);\n              });\n\n        },\n          getRight(type){\n              return getRight(type)\n          },\n          downloadTransactions(){\n              this.download =\"Please wait..\"\n              const data = new FormData();\n              data.append(\"function\", \"downloadTransactions\");\n              data.append(\"keyword\", this.searchValue);\n              data.append(\"dateFrom\", this.dateFrom);\n              data.append(\"dateTo\", this.dateTo);\n              executeDownload(data,biller).then(response => {\n                  this.download =\"Download Report\"\n                  const link = document.createElement('a');\n                  link.href = URL.createObjectURL(response.data);\n                  link.download = this.dateFrom+' to '+ this.dateTo+\" Transactions.csv\";\n                  document.body.appendChild(link);\n                  link.click();\n                  document.body.removeChild(link);\n              });\n          },\n          getTransactions(){\n              this.transactions.splice(0)\n              this.loading = true\n              const data = new FormData();\n              data.append(\"function\", \"getTransactionsPagination\");\n              data.append(\"keyword\", this.searchValue);\n              data.append(\"dateFrom\", this.dateFrom);\n              data.append(\"dateTo\", this.dateTo);\n              data.append(\"page\", this.currentPage);\n              data.append(\"rows_per_page\", this.pageSize);\n\n              execute2(data,biller)\n                  .then((res) =>{\n                      this.loading = false\n                      if (res.data.success) {\n\n                        this.summary.count =0\n                        this.summary.total =0\n\n                        this.totalAmount = null\n\n                          this.transactions =res.data.data.Transactions\n\n                        this.summary = res.data.data.summary\n                        this.totalPages =  Math.ceil(this.summary.count / this.pageSize);\n\n                        //Initialize the accumulator to 0\n                        this.totalAmount = this.transactions.reduce((acc, cur) => {\n                          let amount = Number(cur.amount);\n                          return acc + amount;\n                        }, 0);\n\n                      }else{\n                          alert(res.data.message)\n                      }\n                  })\n                  .catch((e) => {\n                      //alert(e.message);\n                      this.message =e.message\n                  });\n          },\n          getCustomers(){\n              const data = new FormData();\n              data.append(\"function\", \"getCustomers\");\n              data.append(\"searchValue\", this.searchValue);\n\n              execute(data,biller)\n                  .then((res) =>{\n                      this.entries =[]\n                      if (res.data.success) {\n                          this.customers =res.data.data.customers\n                      }else{\n                          alert(res.data.message)\n                      }\n                  })\n                  .catch((e) => {\n                      //alert(e.message);\n                      this.message =e.message\n                  });\n          },\n          getCustomersHistory(account_from){\n              const data = new FormData();\n              data.append(\"function\", \"getCustomersHistory\");\n              data.append(\"account_from\", account_from);\n              execute(data,biller)\n                  .then((res) =>{\n                      if (res.data.success) {\n                          this.transactions =res.data.data.transactions\n                      }else{\n                          alert(res.data.message)\n                      }\n                  })\n                  .catch((e) => {\n                      //alert(e.message);\n                      this.message =e.message\n                  });\n          },\n          //#########\n          getCurrentMonth(){\n              const d = new Date();\n              const monthName = this.monthNames[d.getMonth()];\n              console.log(monthName);\n              return monthName;\n          },\n          getMonthName(){\n              const monthNames = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n              const d = new Date();\n              const monthName = monthNames[d.getMonth()];\n              console.log(monthName);\n              return monthName;\n          },\n          getCurrentYear(){\n              const date = new Date();\n              const currentYear = date.getFullYear();\n              console.log(currentYear); // Output: 2023\n              return currentYear;\n\n          },\n          formatPrice(value) {\n              var formatter = new Intl.NumberFormat('en-US', {\n                  style: 'currency',\n                  currency: 'KES',\n                  minimumFractionDigits: 2\n              });\n              return formatter.format(value);\n          },\n          gotTo(route){\n              router.push(route)\n          },\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}