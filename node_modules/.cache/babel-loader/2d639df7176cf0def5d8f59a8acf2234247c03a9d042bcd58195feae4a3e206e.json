{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-aae30ed8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"dashboard-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div id=\\\"Map-data\\\" style=\\\"height:500px;\\\" data-v-aae30ed8></div><select class=\\\"filter-by-month\\\" data-v-aae30ed8><!-- Options for month filtering --></select><select class=\\\"filter-by\\\" data-v-aae30ed8><option value=\\\"Violations\\\" data-v-aae30ed8>Violations</option><option value=\\\"Revenue\\\" data-v-aae30ed8>Revenue</option></select><select class=\\\"map-product-type\\\" data-v-aae30ed8><!-- Options for product types --></select><select class=\\\"map-mvt-type\\\" data-v-aae30ed8><!-- Options for movement types --></select><select class=\\\"map-time\\\" data-v-aae30ed8><!-- Options for time filtering --></select><div class=\\\"map-product-sales-txt\\\" data-v-aae30ed8></div><div class=\\\"map-mvt-type-txt\\\" data-v-aae30ed8></div><div class=\\\"map-time-txt\\\" data-v-aae30ed8></div>\", 9);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavigationBar = _resolveComponent(\"NavigationBar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavigationBar), _hoisted_2]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_NavigationBar","_hoisted_2"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/HMIS/hospital-management/src/components/Dashboard.vue"],"sourcesContent":["<template>\n  <div id=\"dashboard-page\">\n    <NavigationBar />\n    <div id=\"Map-data\" style=\"height: 500px;\"></div>\n    <select class=\"filter-by-month\">\n      <!-- Options for month filtering -->\n    </select>\n    <select class=\"filter-by\">\n      <option value=\"Violations\">Violations</option>\n      <option value=\"Revenue\">Revenue</option>\n    </select>\n    <select class=\"map-product-type\">\n      <!-- Options for product types -->\n    </select>\n    <select class=\"map-mvt-type\">\n      <!-- Options for movement types -->\n    </select>\n    <select class=\"map-time\">\n      <!-- Options for time filtering -->\n    </select>\n    <div class=\"map-product-sales-txt\"></div>\n    <div class=\"map-mvt-type-txt\"></div>\n    <div class=\"map-time-txt\"></div>\n  </div>\n</template>\n\n<script>\nimport NavigationBar from '@/components/NavigationBar.vue';\nimport Highcharts from 'highcharts';\nimport HighchartsMap from 'highcharts/modules/map';\n\n// Initialize Highcharts map module\nHighchartsMap(Highcharts);\n\nexport default {\n  name: \"dashboard-Page\",\n  components: { NavigationBar },\n  data() {\n    return {\n      mapData: [\n        {\n          \"postal-code\": \"LMU\",\n          \"id\": \"County_5\",\n          \"name\": \"Lamu\",\n          \"path\": \"M179,219,178,219,...\"\n        },\n        // Add more counties here if needed\n      ],\n      chartDate: \"All Time\",\n      chartProd: \"Ethernal\",\n      chartmvt_type: \"Sales Performance(%)\",\n      selectedCounty: [],\n      min: 10000,\n      max: 9000000,\n      filter_by: \"Violations\",\n    };\n  },\n  mounted() {\n    this.selectedCounty = this.mapData;\n    this.initMapChart();\n    this.bindEvents();\n  },\n  methods: {\n    bindEvents() {\n      const changingSeriesData = this.changingSeriesData.bind(this);\n      const changingLegendTitle = this.changingLegendTitle.bind(this);\n\n      // Event handlers for filters\n      document.querySelector('.filter-by-month').addEventListener('change', changingSeriesData);\n      document.querySelector('.filter-by').addEventListener('change', (event) => {\n        this.filter_by = event.target.value;\n        if (this.filter_by === \"Violations\") {\n          this.max = 100;\n          this.min = 1;\n          this.redColorScheme();\n          this.unitsTooltips();\n          this.updateLegend(\"Expired Certificates By Sub County\");\n        } else if (this.filter_by === \"Revenue\") {\n          this.max = 10000000;\n          this.min = 1;\n          this.changingLegendColor();\n          this.cashTooltips();\n          this.updateLegend(\"Revenue Collection By Sub-Counties\");\n        }\n        changingSeriesData();\n      });\n      document.querySelector('.map-product-type').addEventListener('change', (event) => {\n        this.chartProd = event.target.value;\n        this.updateText('.map-product-sales-txt', this.chartProd);\n        changingSeriesData();\n        changingLegendTitle();\n      });\n      document.querySelector('.map-mvt-type').addEventListener('change', (event) => {\n        this.chartmvt_type = event.target.value;\n        this.updateText('.map-mvt-type-txt', this.chartmvt_type);\n        changingSeriesData();\n        changingLegendTitle();\n      });\n      document.querySelector('.map-time').addEventListener('change', (event) => {\n        this.chartDate = event.target.value;\n        this.updateText('.map-time-txt', this.chartDate);\n        changingSeriesData();\n        changingLegendTitle();\n      });\n    },\n    updateText(selector, text) {\n      document.querySelector(selector).textContent = text;\n    },\n    updateLegend(text) {\n      this.Mapchart.legend.title.attr({ text });\n      this.Mapchart.series[0].update({ name: text });\n    },\n    changingLegendTitle() {\n      const title = `${this.chartDate} ${this.chartProd} ${this.chartmvt_type}`;\n      this.Mapchart.legend.title.attr({ text: title });\n      this.Mapchart.series[0].update({ name: title });\n    },\n    initMapChart() {\n      this.Mapchart = Highcharts.mapChart('Map-data', {\n        series: [\n          {\n            name: \"Revenue Collection By Sub-Counties\",\n            animation: { duration: 1000 },\n            states: { hover: { borderColor: '#cdd3d9' } },\n            colorByPoint: false,\n            color: '#ebedf0',\n            borderWidth: 1,\n            borderColor: 'white',\n            type: \"map\",\n            joinBy: \"id\",\n            mapData: this.selectedCounty,\n            data: this.generateMapData()\n          }\n        ],\n        colorAxis: {\n          min: 1,\n          stops: [\n            [0, '#ebedf0'],\n            [0.2, '#c6e6d0'],\n            [0.4, '#7dc794'],\n            [0.6, '#46af68'],\n            [0.7, '#358e52'],\n            [1, '#215d34']\n          ]\n        }\n      });\n    },\n    generateMapData() {\n      return this.mapData.map((item, index) => ({\n        id: item.id,\n        y: index,\n        value: this.getRandomNumber(this.min, this.max)\n      }));\n    },\n    changingSeriesData() {\n      this.Mapchart.series[0].update({ data: this.generateMapData() });\n    },\n    getRandomNumber(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    unitsTooltips() {\n      this.Mapchart.series[0].update({\n        tooltip: {\n          pointFormat: '<span style=\"font-weight:500;\">{point.name} Sub County: </span>{point.value}',\n          shared: true\n        }\n      });\n    },\n    cashTooltips() {\n      this.Mapchart.series[0].update({\n        tooltip: {\n          pointFormat: '<span style=\"font-weight:500;\">{point.name} Sub County: </span>KES {point.value}',\n          shared: true\n        }\n      });\n    },\n    redColorScheme() {\n      this.Mapchart.colorAxis[0].update({\n        stops: [\n          [0, '#ebedf0'],\n          [0.2, '#ffcacd'],\n          [0.4, '#f16964'],\n          [0.6, '#ff2a15'],\n          [0.7, '#df0013'],\n          [1, '#c50000']\n        ]\n      });\n    },\n    changingLegendColor() {\n      this.Mapchart.colorAxis[0].update({\n        stops: [\n          [0, '#ebedf0'],\n          [0.2, '#c6e6d0'],\n          [0.4, '#7dc794'],\n          [0.6, '#46af68'],\n          [0.7, '#358e52'],\n          [1, '#215d34']\n        ]\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n#dashboard-page {\n  padding: 20px;\n}\n#Map-data {\n  width: 100%;\n  height: 500px;\n}\n</style>\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAgB;;;;uBAAxBC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,YAAA,CAAiBC,wBAAA,GACjBC,UAAgD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}