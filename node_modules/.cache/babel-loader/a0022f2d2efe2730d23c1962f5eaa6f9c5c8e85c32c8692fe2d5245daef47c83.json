{"ast":null,"code":"/* eslint-disable */\nimport axios from \"axios\";\nexport const base = \"https://api.craftcollect.africa/meru\";\nexport const paysol = \"https://api.craftcollect.africa/meru/paysol/index.php\";\n\n//export const paysol =  \"https://api.paysol.co.ke/paysol/index.php\";\n//export const base =\"https://api.paysol.co.ke/\";\n\nexport const rent = base + \"/rent/index.php\";\nexport const parking = base + \"/parking/index.php\";\nexport const trade = base + \"/trade/index.php\";\nexport const biller = base + \"/biller/index.php\";\nexport const authUrl = base + \"/authentication/\";\nlet tokenStr = 'MTVlNmJkNDE1NWZiNDBiZTZlZTVmNjMwZDg5ZmNkMTU1NTRiOTM2MDBlY2U2ZmI2YjUwNGE4MWRmOWJjYTFkZA==';\nexport const execute = (params, url) => {\n  return axios.post(url, params, {\n    headers: {\n      \"Authorization\": `Bearer ${tokenStr}`\n    }\n  });\n};\nexport const executeDownload = (params, url) => {\n  return axios.post(url, params, {\n    headers: {\n      \"Authorization\": `Bearer ${tokenStr}`\n    },\n    responseType: 'blob'\n  });\n};\nexport const execute2 = (params, url) => {\n  return axios.post(url, params);\n};\nexport const getRight = accessRole => {\n  // Get the string from sessionStorage and parse it into an array\n  const selectedRolesString = sessionStorage.getItem(\"selectedRoles\");\n  if (!selectedRolesString) {\n    //  console.error(\"selectedRoles is not available in sessionStorage\");\n    return false; // or handle the absence of selectedRoles in sessionStorage\n  }\n\n  try {\n    const selectedRoles = JSON.parse(selectedRolesString);\n    if (!Array.isArray(selectedRoles)) {\n      //  console.error(\"selectedRoles is not an array\");\n      return false; // or handle the case where selectedRoles is not an array\n    }\n\n    let accessRight = false;\n    for (const role of selectedRoles) {\n      //  console.log(`${accessRole} role: ${role.role}`);\n      if (role.role === accessRole) {\n        accessRight = true;\n        break; // no need to continue checking once a match is found\n      }\n    }\n\n    return accessRight;\n  } catch (error) {\n    //  console.error(\"Error parsing selectedRoles:\", error);\n    return false; // or handle the error appropriately\n  }\n};\n\nexport const formatDate = date => {\n  let d = new Date(date);\n  let day = d.getDate();\n  let month = d.toLocaleString('en-US', {\n    month: 'short'\n  });\n  let year = d.getFullYear();\n  let suffix = '';\n  if (day % 10 === 1 && day !== 11) {\n    suffix = 'st';\n  } else if (day % 10 === 2 && day !== 12) {\n    suffix = 'nd';\n  } else if (day % 10 === 3 && day !== 13) {\n    suffix = 'rd';\n  } else {\n    suffix = 'th';\n  }\n  return `${day}${suffix} ${month} ${year}`;\n};","map":{"version":3,"names":["axios","base","paysol","rent","parking","trade","biller","authUrl","tokenStr","execute","params","url","post","headers","executeDownload","responseType","execute2","getRight","accessRole","selectedRolesString","sessionStorage","getItem","selectedRoles","JSON","parse","Array","isArray","accessRight","role","error","formatDate","date","d","Date","day","getDate","month","toLocaleString","year","getFullYear","suffix"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/biller/meru-biller/src/api/index.js"],"sourcesContent":["/* eslint-disable */\nimport axios from \"axios\";\n\nexport const base =\"https://api.craftcollect.africa/meru\";\nexport const paysol =  \"https://api.craftcollect.africa/meru/paysol/index.php\";\n\n//export const paysol =  \"https://api.paysol.co.ke/paysol/index.php\";\n//export const base =\"https://api.paysol.co.ke/\";\n\n\n\n\n\n\nexport const rent = base+\"/rent/index.php\";\nexport const parking =  base+\"/parking/index.php\";\nexport const trade =  base+\"/trade/index.php\";\nexport const biller =  base+\"/biller/index.php\";\nexport const authUrl =  base+\"/authentication/\";\n\n\nlet tokenStr = 'MTVlNmJkNDE1NWZiNDBiZTZlZTVmNjMwZDg5ZmNkMTU1NTRiOTM2MDBlY2U2ZmI2YjUwNGE4MWRmOWJjYTFkZA==';\nexport const execute = (params, url) => {\n    return axios.post(url,params,{headers: {\"Authorization\": `Bearer ${tokenStr}`}})\n}\n\nexport const executeDownload = (params, url) => {\n    return axios.post(url,params,{headers: {\"Authorization\": `Bearer ${tokenStr}`}, responseType: 'blob'})\n}\nexport const execute2 = (params, url) => {\n    return axios.post(url,params)\n}\n\n\nexport const getRight = (accessRole) => {\n    // Get the string from sessionStorage and parse it into an array\n    const selectedRolesString = sessionStorage.getItem(\"selectedRoles\");\n\n    if (!selectedRolesString) {\n      //  console.error(\"selectedRoles is not available in sessionStorage\");\n        return false;  // or handle the absence of selectedRoles in sessionStorage\n    }\n\n    try {\n        const selectedRoles = JSON.parse(selectedRolesString);\n\n        if (!Array.isArray(selectedRoles)) {\n          //  console.error(\"selectedRoles is not an array\");\n            return false;  // or handle the case where selectedRoles is not an array\n        }\n\n        let accessRight = false;\n\n        for (const role of selectedRoles) {\n          //  console.log(`${accessRole} role: ${role.role}`);\n            if (role.role === accessRole) {\n                accessRight = true;\n                break;  // no need to continue checking once a match is found\n            }\n        }\n\n        return accessRight;\n    } catch (error) {\n      //  console.error(\"Error parsing selectedRoles:\", error);\n        return false;  // or handle the error appropriately\n    }\n};\n\n\nexport const formatDate =(date) =>{\n    let d = new Date(date);\n    let day = d.getDate();\n    let month = d.toLocaleString('en-US', { month: 'short' });\n    let year = d.getFullYear();\n\n    let suffix = '';\n    if (day % 10 === 1 && day !== 11) {\n        suffix = 'st';\n    } else if (day % 10 === 2 && day !== 12) {\n        suffix = 'nd';\n    } else if (day % 10 === 3 && day !== 13) {\n        suffix = 'rd';\n    } else {\n        suffix = 'th';\n    }\n    return `${day}${suffix} ${month} ${year}`;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}