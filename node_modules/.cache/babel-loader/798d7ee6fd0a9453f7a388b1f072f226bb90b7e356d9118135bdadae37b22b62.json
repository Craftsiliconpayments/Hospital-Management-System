{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from \"@/router\";\nimport vueHelmet from \"vue-helmet/src/VueHelmet\";\nimport * as VueGoogleMaps from \"vue3-google-map\";\nimport IdleVue from 'idle-vue';\ncreateApp(App).use(VueGoogleMaps, {\n  load: {\n    key: \"AIzaSyAGPbYfcYqdbSBeXdIpH5iWrznfU886Qk8\"\n  }\n}).use(router).use(vueHelmet).use(IdleVue).mount('#app').use(IdleVue, createApp, {\n  idleTime: 10000,\n  startEventName: \"load\",\n  resetEvents: [\"click\", \"mousemove\", \"keydown\", \"touchstart\"],\n  idleTimeoutCallback: () => {\n    app.$router.push(\"/\");\n  }\n});\n\n// import your store or create a Vue instance here\nimport store from \"./store\";\nconst app = createApp(App);\n\n// use the plugin with your desired options\napp.use(IdleVue, {\n  // pass either an eventEmitter or a store option\n  eventEmitter: app,\n  // or\n  // store: store,\n  idleTime: 10000,\n  startEventName: \"load\",\n  resetEvents: [\"click\", \"mousemove\", \"keydown\", \"touchstart\"],\n  idleTimeoutCallback: () => {\n    app.$router.push(\"/\");\n  }\n});\n\n// mount your app\napp.mount(\"#app\");","map":{"version":3,"names":["createApp","App","router","vueHelmet","VueGoogleMaps","IdleVue","use","load","key","mount","idleTime","startEventName","resetEvents","idleTimeoutCallback","app","$router","push","store","eventEmitter"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/homabaytest/county-biller/src/main.js"],"sourcesContent":["\n  /* eslint-disable */\n  import { createApp } from 'vue'\n  import App from './App.vue'\n  import router from \"@/router\";\n  import vueHelmet from \"vue-helmet/src/VueHelmet\";\n  import * as VueGoogleMaps from \"vue3-google-map\";\n  import IdleVue from 'idle-vue'\n\n  createApp(App)\n      .use(VueGoogleMaps,{ load: {key: \"AIzaSyAGPbYfcYqdbSBeXdIpH5iWrznfU886Qk8\"}})\n      .use(router)\n      .use(vueHelmet)\n      .use(IdleVue)\n      .mount('#app')\n\n\n\n      .use(IdleVue, createApp, {\n    idleTime: 10000,\n    startEventName: \"load\",\n    resetEvents: [\"click\", \"mousemove\", \"keydown\", \"touchstart\"],\n    idleTimeoutCallback: () => {\n      app.$router.push(\"/\");\n    },\n  });\n\n\n  // import your store or create a Vue instance here\n  import store from \"./store\";\n  const app = createApp(App);\n\n  // use the plugin with your desired options\n  app.use(IdleVue, {\n// pass either an eventEmitter or a store option\n    eventEmitter: app,\n// or\n// store: store,\n    idleTime: 10000,\n    startEventName: \"load\",\n    resetEvents: [\"click\", \"mousemove\", \"keydown\", \"touchstart\"],\n    idleTimeoutCallback: () => {\n      app.$router.push(\"/\");\n    },\n  });\n\n  // mount your app\n  app.mount(\"#app\");\n\n\n\n\n"],"mappings":";AACE;AACA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAChD,OAAOC,OAAO,MAAM,UAAU;AAE9BL,SAAS,CAACC,GAAG,CAAC,CACTK,GAAG,CAACF,aAAa,EAAC;EAAEG,IAAI,EAAE;IAACC,GAAG,EAAE;EAAyC;AAAC,CAAC,CAAC,CAC5EF,GAAG,CAACJ,MAAM,CAAC,CACXI,GAAG,CAACH,SAAS,CAAC,CACdG,GAAG,CAACD,OAAO,CAAC,CACZI,KAAK,CAAC,MAAM,CAAC,CAIbH,GAAG,CAACD,OAAO,EAAEL,SAAS,EAAE;EAC3BU,QAAQ,EAAE,KAAK;EACfC,cAAc,EAAE,MAAM;EACtBC,WAAW,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,CAAC;EAC5DC,mBAAmB,EAAEA,CAAA,KAAM;IACzBC,GAAG,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;EACvB;AACF,CAAC,CAAC;;AAGF;AACA,OAAOC,KAAK,MAAM,SAAS;AAC3B,MAAMH,GAAG,GAAGd,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACAa,GAAG,CAACR,GAAG,CAACD,OAAO,EAAE;EACnB;EACIa,YAAY,EAAEJ,GAAG;EACrB;EACA;EACIJ,QAAQ,EAAE,KAAK;EACfC,cAAc,EAAE,MAAM;EACtBC,WAAW,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,CAAC;EAC5DC,mBAAmB,EAAEA,CAAA,KAAM;IACzBC,GAAG,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;EACvB;AACF,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACL,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}