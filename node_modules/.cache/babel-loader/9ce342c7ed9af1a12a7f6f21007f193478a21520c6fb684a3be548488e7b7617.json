{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/* eslint-disable */\nimport NavigationBar from \"@/components/Navigation\";\nimport router from \"@/router\";\nimport { authUrl, execute } from \"@/api\";\nexport default {\n  name: \"AddUser\",\n  components: {\n    NavigationBar\n  },\n  data() {\n    return {\n      loading: true,\n      // set the initial current page as 1\n      currentPage: 1,\n      // set the total number of pages as 10 (you can change this according to your data source)\n      totalPages: 0,\n      // set the number of items per page as 5 (you can change this according to your preference)\n      pageSize: 10,\n      user: {\n        id: null,\n        names: null,\n        gender: null,\n        email: null,\n        phoneNumber: null,\n        idNo: null,\n        password: null,\n        category: null,\n        dateCreated: null,\n        zone: null,\n        subCountyID: null,\n        subCountyName: null,\n        wardID: null,\n        wardName: null,\n        lat: null,\n        lng: null,\n        address: null,\n        lastSeen: null,\n        status: null,\n        des: null,\n        target: null,\n        permission: null,\n        dailyTargets: null,\n        monthlyTargets: null,\n        financialYearTargets: null,\n        createdBy: null\n      },\n      logsName: '',\n      message: null,\n      logs: []\n    };\n  },\n  computed: {\n    //pagination code\n    // calculate the start index of the items for the current page\n    startIndex() {\n      return (this.currentPage - 1) * this.pageSize;\n    },\n    // calculate the end index of the items for the current page\n    endIndex() {\n      return this.currentPage * this.pageSize;\n    }\n  },\n  watch: {\n    //pagination code\n    // define a watcher for the pageSize property\n    pageSize(newPageSize) {\n      this.getLogs(\"\"); //todo change\n      // get the total number of items from your data source (you can change this according to your logic)\n      const totalItems = this.summary.count;\n      // calculate the new total pages by dividing the total items by the new page size and rounding up\n      const newTotalPages = Math.ceil(totalItems / newPageSize);\n      // update the totalPages data property with the new value\n      this.totalPages = newTotalPages;\n      // reset the current page to 1\n      this.currentPage = 1;\n    },\n    selectedItem: {\n      handler() {\n        this.getLogs(this.selectedItem);\n      }\n    },\n    search: {\n      handler() {\n        this.getLogs(\"\");\n      }\n    }\n  },\n  mounted() {\n    this.logsName = sessionStorage.getItem('logsName');\n    this.getLogs();\n  },\n  methods: {\n    //pagination code\n    pagination(currentPage, totalPages, maxVisibleButtons) {\n      //initialize an empty array for the pages\n      let pages = [];\n      //calculate the start and end indices of the visible buttons\n      let start = currentPage - Math.floor(maxVisibleButtons / 2);\n      let end = currentPage + Math.floor(maxVisibleButtons / 2);\n      //adjust the start and end indices if they are out of bounds\n      if (start < 1) {\n        start = 1;\n        end = start + maxVisibleButtons - 1;\n        if (end > totalPages) {\n          end = totalPages;\n        }\n      }\n      if (end > totalPages) {\n        end = totalPages;\n        start = end - maxVisibleButtons + 1;\n        if (start < 1) {\n          start = 1;\n        }\n      }\n      //loop through the start and end indices and push the pages to the array\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      //add an ellipsis at the beginning if there are more pages before the start index\n      if (start > 1) {\n        pages.unshift(\"...\");\n      }\n      //add an ellipsis at the end if there are more pages after the end index\n      if (end < totalPages) {\n        pages.push(\"...\");\n      }\n      // return the array of pages\n      return pages;\n    },\n    // define a method to go to the previous page\n    prevPage() {\n      // check if the current page is not the first page\n      if (this.currentPage > 1) {\n        // decrement the current page by 1\n        this.currentPage--;\n        this.getLogs(\"\");\n      }\n    },\n    // define a method to go to the next page\n    nextPage() {\n      // check if the current page is not the last page\n      if (this.currentPage < this.totalPages) {\n        // increment the current page by 1\n        this.currentPage++;\n        this.getLogs(\"\");\n      }\n    },\n    // define a method to go to a specific page\n    goToPage(page) {\n      // check if the page is valid and not equal to the current page\n      if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n        // set the current page to the given page\n        this.currentPage = page;\n        this.getLogs(\"\");\n      }\n    },\n    gotTo(route) {\n      router.push(route);\n    },\n    getHumanDate(dateData) {\n      //  const res = dateData.split(\" \");\n      const dateObject = new Date(Date.parse(dateData));\n      return dateObject.toDateString();\n    },\n    getLogs() {\n      this.loading = true;\n      const data = new FormData();\n      data.append(\"function\", \"getLogs\");\n      data.append(\"idNo\", sessionStorage.getItem('idNoUser'));\n      data.append(\"page\", this.currentPage);\n      data.append(\"rows_per_page\", this.pageSize);\n      execute(data, authUrl).then(res => {\n        this.loading = false;\n        if (res.data.success) {\n          this.logs = res.data.data.logs;\n          this.user = res.data.data.user;\n          this.summary = res.data.data.resultSummary;\n          this.totalPages = Math.ceil(this.summary.count / this.pageSize);\n        } else {\n          this.message = res.data.message;\n        }\n      }).catch(e => {\n        //alert(e.message);\n        this.message = e.message;\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavigationBar","router","authUrl","execute","name","components","data","loading","currentPage","totalPages","pageSize","user","id","names","gender","email","phoneNumber","idNo","password","category","dateCreated","zone","subCountyID","subCountyName","wardID","wardName","lat","lng","address","lastSeen","status","des","target","permission","dailyTargets","monthlyTargets","financialYearTargets","createdBy","logsName","message","logs","computed","startIndex","endIndex","watch","newPageSize","getLogs","totalItems","summary","count","newTotalPages","Math","ceil","selectedItem","handler","search","mounted","sessionStorage","getItem","methods","pagination","maxVisibleButtons","pages","start","floor","end","i","push","unshift","prevPage","nextPage","goToPage","page","gotTo","route","getHumanDate","dateData","dateObject","Date","parse","toDateString","FormData","append","then","res","success","resultSummary","catch","e"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/biller/meru-biller/src/components/systemusers/UserLogs.vue"],"sourcesContent":["<template>\n\n\n<head>\n\n    <meta charset=\"utf-8\" />\n    <title>Biller | {{logsName}}'s Details</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta content=\"Keep your finances and membership up to date\" name=\"description\" />\n    <meta content=\"Kelvin Njuguna Ndungu\" name=\"author\" />\n    <!-- App favicon -->\n    <link rel=\"shortcut icon\" href=\"assets/images/favicon.svg\">\n\n    <!-- DataTables -->\n    <link href=\"assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <link href=\"assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n    <!-- Bootstrap Css -->\n    <link href=\"assets/css/bootstrap.min.css\" id=\"bootstrap-style\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- Bootstrap select styling -->\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n    <!-- Icons Css -->\n    <link href=\"assets/css/icons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- App Css-->\n    <link href=\"assets/css/app.min.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- custom Css-->\n    <link href=\"assets/css/custom.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n</head>\n\n<body data-sidebar=\"dark\">\n\n\n\n    <!-- Begin page -->\n    <div id=\"layout-wrapper\">\n\n\n        <NavigationBar/>\n\n\n\n        <!-- ============================================================== -->\n        <!-- Start right Content here -->\n        <!-- ============================================================== -->\n        <div class=\"main-content\">\n\n            <div class=\"page-content\">\n                <div class=\"container-fluid\">\n\n                    <!-- start page title -->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n                                <h4 class=\"mb-sm-0 font-size-18\">{{user.names}}'s User logs</h4>\n\n                                <div class=\"page-title-right\">\n                                    <ol class=\"breadcrumb m-0\">\n                                        <li class=\"breadcrumb-item\"><a @click=\"gotTo('dashboard')\" href=\"javascript: void(0)\">Dashboards</a></li>\n                                        <li class=\"breadcrumb-item\"><a @click=\"gotTo('users')\" href=\"javascript: void(0)\">All users</a></li>\n                                        <li class=\"breadcrumb-item\"><a  href=\"javascript: void(0)\">{{user.names}}</a></li>\n                                        <li class=\"breadcrumb-item active\">User logs</li>\n                                    </ol>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end page title -->\n\n                     <!-- user details -->\n                     <div  v-if=\"logs.length<1 & loading === false\" class=\"row\">\n                            <div class=\"col-lg-12\">\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <div class=\"row\">\n                                            <div class=\"col-lg-4\">\n                                                <div class=\"d-flex\">\n                                                    <div class=\"flex-shrink-0 me-3\">\n                                                        <div class=\"avatar-md mr-15px \">\n                                                            <h1 class=\"avatar-title rounded-circle \">\n                                                                CO\n                                                            </h1>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"flex-grow-1 align-self-center\">\n                                                        <div class=\"text-muted\">\n                                                            <h5 class=\"mb-1\">{{ user.names }}</h5>\n                                                            <p class=\"mb-0\">{{user.category}} (ID {{user.idNo}})</p>\n                                                            <p class=\"text-muted mb-0 d-flex align-items-center\">\n                                                                <a href=\"tel:0704549859\"\n                                                                    class=\"d-flex align-items-center\"><i\n                                                                        class=\"mdi mdi-phone me-2 font-size-18\"></i> {{user.phoneNumber}}</a> <span class=\"px-3 px-3\">|</span>\n                                                                <a class=\"d-flex align-items-center\"\n                                                                    href=\"mailto:email@email.com\"><i\n                                                                        class=\"mdi mdi-email-outline font-size-18 me-2\"></i>\n                                                                {{user.email}}</a>\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"col-lg-6 align-self-center\">\n                                                <div class=\"text-lg-center mt-4 mt-lg-0\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-3\">\n                                                            <div>\n                                                                <p class=\"text-muted text-truncate mb-2\">Sub County</p>\n                                                                <h6 class=\"mb-0\">{{user.subCountyName}}</h6>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-3\">\n                                                            <div>\n                                                                <p class=\"text-muted text-truncate mb-2\">Ward</p>\n                                                                <h6 class=\"mb-0\">{{user.wardName}}</h6>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-3\">\n                                                            <div>\n                                                                <p class=\"text-muted text-truncate mb-2\">Last Seen</p>\n                                                                <h6 class=\"mb-0\">{{user.lastSeen}}</h6>\n\n                                                            </div>\n                                                        </div>\n\n                                                        <div class=\"col-3\">\n                                                            <div>\n                                                                <p class=\"text-muted text-truncate mb-2\">Current Zone</p>\n                                                                <h6 class=\"mb-0\">{{user.zone}}</h6>\n\n                                                            </div>\n                                                        </div>\n\n\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"col-lg-2 d-lg-block\">\n                                                <div class=\"clearfix mt-4 mt-lg-0\">\n                                                    <div class=\"dropdown float-end\">\n                                                        <div class=\"d-flex flex-column me-3 pe-3\">\n                                                            <span class=\"pr-3 fw-semibold mb-2\">Added By</span>\n                                                            <a> {{user.createdBy}} On {{user.dateCreated}}</a>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <!-- end row -->\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- end of user details -->\n\n                    <!-- tool bar -->\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card\">\n                                <div class=\"card-body mini-nav bg-primary pt-2 pb-3 active\">\n                                    <nav class=\"navbar navbar-expand-md navbar navbar-dark bg-primary py-2 active\">\n                                        <button class=\"navbar-toggler btn btn-sm px-3 font-size-16 header-item waves-effect h-auto text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                          <span class=\"mdi mdi-menu\"></span>\n                                        </button>\n                                        <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarNavAltMarkup\">\n                                            <div class=\"navbar-nav\">\n                                                <a class=\"nav-item nav-link active\" @click=\"gotTo('user-logs')\"  href=\"javascript: void(0)\">User's Logs</a>\n                                                <a class=\"nav-item nav-link\" @click=\"gotTo('user-collections')\" href=\"javascript: void(0)\">Revenue Collections<span class=\"sr-only\">(current)</span></a>\n                                               <!-- <a class=\"nav-item nav-link\" href=\"user-daily.html\">Daily Collections</a>-->\n                                            </div>\n                                         <!--   <div class=\"navbar-nav\">\n                                                <a href=\"collector-new.html\" type=\"button\" class=\"btn btn-primary waves-effect waves-light text-white\">\n                                                    <i class=\"bx bx bxs-edit-alt font-size-16 align-middle me-2\"></i> Edit Account\n                                                </a>\n                                            </div>-->\n\n                                        </div>\n                                    </nav>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <!-- end of tool bar -->\n\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card\">\n                                <div class=\"card-header bg-white pt-0 pr-0 p-0 d-flex justify-content-between align-items-center w-100 border-bottom\">\n\n                                    <div class=\"btn-toolbar p-3 align-items-center d-none animated delete-tool-bar\" role=\"toolbar\">\n\n                                        <button type=\"button\" class=\"btn btn-primary waves-effect btn-label waves-light me-3\"><i class=\"bx  bx-trash label-icon\"></i> Delete Contact(s)</button>\n                                        <button type=\"button\" class=\"btn btn-primary waves-effect btn-label waves-light me-3\"><i class=\"mdi mdi-plus label-icon\"></i> Compose Message</button>\n                                    </div>\n                                </div>\n                                <div class=\"card-body\">\n                                    <table class=\"table align-middle table-nowrap table-hover dt-responsive contacts-table\" id=\"datatable-buttons\">\n                                        <thead class=\"table-light\">\n                                            <tr>\n                                                <th scope=\"col\">Date</th>\n                                                <th scope=\"col\">Details</th>\n\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr v-for=\"(item, index) in logs\" :value=\"item\" :key=\"index\">\n                                                <td><span class=\"fw-semibold\">{{getHumanDate(item.date)}}</span></td>\n                                                <td>{{item.description}}</td>\n                                            </tr>\n\n                                        </tbody>\n                                    </table>\n\n                                    <div v-if=\"loading\" class=\"card-body px-5 d-flex flex-column justify-items-center align-items-center text-center d-flex justify-content-center\">\n                                        <div class=\"p-5 py-0 pt-3\">\n                                            <div class=\"p-5\">\n                                                <div class=\"spinner-border text-info m-1\" role=\"status\">\n                                                    <span class=\"sr-only text-uppercase\">Loading...</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <h4 class=\"text-uppercase\">Loading Data</h4>\n                                        <div class=\"col-sm-12 col-md-8 col-lg-5\">\n                                            <p>We are fetching the data for you. It will be ready soon. Please wait and have fun. Thank you for your interest.</p>\n\n                                        </div>\n                                    </div>\n\n                                    <div v-if=\"logs.length<1 & loading === false\" class=\"card-body d-sm-none d-md-block px-5 d-flex flex-column justify-items-center align-items-center text-center\">\n                                        <div class=\"p-5 py-0 pt-3\">\n                                            <img :src=\"'./assets/images/no-results.png'\" class=\"img mb-4\"  alt=\"No search results\"/>\n                                        </div>\n                                        <h4>No Results To Show</h4>\n                                        <p>Sorry, we could not find any results that match your search or filter criteria. Please try using different keywords or filters.</p>\n                                    </div>\n\n                                    <div class=\"card-footer bg-white\">\n                                        <nav aria-label=\"Page navigation example \"\n                                             class=\"d-flex align-items-center justify-content-between\">\n\n                                            <div class=\"d-flex align-items-center\">\n                                            <span class=\"pr-3 pb-0 mb-0 font-13px\">\n                                                <span>Rows Per Page</span>\n                                            </span>\n                                                <select class=\"form-select w-auto font-13px \" v-model=\"pageSize\">\n                                                    <option value=\"10\">10 Rows</option>\n                                                    <option value=\"25\">25 Rows</option>\n                                                    <option value=\"50\">50 Rows</option>\n                                                    <option value=\"100\">100 Rows</option>\n                                                    <option value=\"150\">150 Rows</option>\n                                                    <option value=\"200\">200 Rows</option>\n                                                </select>\n                                            </div>\n\n                                            <ul class=\"pagination\">\n                                                <!-- add a class of disabled and an attribute of disabled when the current page is the first page -->\n                                                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                                                    <a class=\"page-link\" tabindex=\"-1\" @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</a>\n                                                </li>\n                                                <!-- replace the v-for directive with the pagination function call -->\n                                                <li v-for=\"page in pagination(currentPage, totalPages, 3)\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\n                                                    <!-- check if the page is an ellipsis and display it as plain text -->\n                                                    <span v-if=\"page === '...'\" class=\"page-link\">{{ page }}</span>\n                                                    <!-- otherwise, display it as a clickable link -->\n                                                    <a v-else class=\"page-link\" @click=\"goToPage(page)\">{{ page }}</a>\n                                                </li>\n                                                <!-- add a class of disabled and an attribute of disabled when the current page is the last page -->\n                                                <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                                                    <a class=\"page-link\"  @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</a>\n                                                </li>\n                                            </ul>\n\n\n                                        </nav>\n                                    </div>\n\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end row -->\n\n\n\n                </div>\n                <!-- container-fluid -->\n            </div>\n            <!-- End Page-content -->\n\n\n\n\n\n\n            <footer class=\"footer \">\n                <div class=\"container-fluid \">\n                    <div class=\"row \">\n                        <div class=\"col-sm-6 \">\n                           <!-- <script>\n                                document.write(new Date().getFullYear())\n                            </script> -->© Best Birdy\n    </div>\n    <div class=\"col-sm-6 \">\n        <div class=\"text-sm-end d-sm-block \">\n            Best Birdy Billing system.\n        </div>\n    </div>\n    </div>\n    </div>\n    </footer>\n    </div>\n    <!-- end main content-->\n    </div>\n    <!-- END layout-wrapper -->\n    <!-- Right bar overlay-->\n    <div class=\"rightbar-overlay\"></div>\n\n    </body>\n\n</template>\n\n<script>\n    /* eslint-disable */\n    import NavigationBar from \"@/components/Navigation\";\n    import router from \"@/router\";\n    import {authUrl, execute} from \"@/api\";\n    export default {\n        name: \"AddUser\",\n        components: {NavigationBar},\n        data() {\n            return{\n                loading:true,\n                // set the initial current page as 1\n                currentPage: 1,\n                // set the total number of pages as 10 (you can change this according to your data source)\n                totalPages: 0,\n                // set the number of items per page as 5 (you can change this according to your preference)\n                pageSize: 10,\n                user: {\n                    id: null,\n                    names: null,\n                    gender: null,\n                    email: null,\n                    phoneNumber: null,\n                    idNo: null,\n                    password: null,\n                    category: null,\n                    dateCreated:null,\n                    zone: null,\n                    subCountyID:null,\n                    subCountyName: null,\n                    wardID: null,\n                    wardName: null,\n                    lat: null,\n                    lng: null,\n                    address: null,\n                    lastSeen: null,\n                    status: null,\n                    des:null,\n                    target: null,\n                    permission: null,\n                    dailyTargets: null,\n                    monthlyTargets: null,\n                    financialYearTargets:null,\n                    createdBy: null\n                },\n                logsName:'',\n                message:null,\n                logs:[]\n            }\n        },\n        computed: {\n            //pagination code\n            // calculate the start index of the items for the current page\n            startIndex() {\n                return (this.currentPage - 1) * this.pageSize;\n            },\n            // calculate the end index of the items for the current page\n            endIndex() {\n                return this.currentPage * this.pageSize;\n            },\n\n        },\n        watch: {\n            //pagination code\n            // define a watcher for the pageSize property\n            pageSize(newPageSize) {\n                this.getLogs(\"\")//todo change\n                // get the total number of items from your data source (you can change this according to your logic)\n                const totalItems = this.summary.count;\n                // calculate the new total pages by dividing the total items by the new page size and rounding up\n                const newTotalPages = Math.ceil(totalItems / newPageSize);\n                // update the totalPages data property with the new value\n                this.totalPages = newTotalPages;\n                // reset the current page to 1\n                this.currentPage = 1;\n\n            },\n            selectedItem: {\n                handler() {\n                    this.getLogs(this.selectedItem);\n                }\n            },\n            search: {\n                handler() {\n\n                    this.getLogs(\"\");\n                }\n            }\n        },\n        mounted() {\n            this.logsName =  sessionStorage.getItem('logsName')\n            this.getLogs()\n\n\n        },\n        methods:{\n            //pagination code\n            pagination(currentPage, totalPages, maxVisibleButtons) {\n                //initialize an empty array for the pages\n                let pages = [];\n                //calculate the start and end indices of the visible buttons\n                let start = currentPage - Math.floor(maxVisibleButtons / 2);\n                let end = currentPage + Math.floor(maxVisibleButtons / 2);\n                //adjust the start and end indices if they are out of bounds\n                if (start < 1) {\n                    start = 1;\n                    end = start + maxVisibleButtons - 1;\n                    if (end > totalPages) {\n                        end = totalPages;\n                    }\n                }\n                if (end > totalPages) {\n                    end = totalPages;\n                    start = end - maxVisibleButtons + 1;\n                    if (start < 1) {\n                        start = 1;\n                    }\n                }\n                //loop through the start and end indices and push the pages to the array\n                for (let i = start; i <= end; i++) {\n                    pages.push(i);\n                }\n                //add an ellipsis at the beginning if there are more pages before the start index\n                if (start > 1) {\n                    pages.unshift(\"...\");\n                }\n                //add an ellipsis at the end if there are more pages after the end index\n                if (end < totalPages) {\n                    pages.push(\"...\");\n                }\n// return the array of pages\n                return pages;\n            },\n            // define a method to go to the previous page\n            prevPage() {\n                // check if the current page is not the first page\n                if (this.currentPage > 1) {\n                    // decrement the current page by 1\n                    this.currentPage--;\n                    this.getLogs(\"\")\n                }\n            },\n            // define a method to go to the next page\n            nextPage() {\n                // check if the current page is not the last page\n                if (this.currentPage < this.totalPages) {\n                    // increment the current page by 1\n                    this.currentPage++;\n                    this.getLogs(\"\")\n                }\n            },\n            // define a method to go to a specific page\n            goToPage(page) {\n                // check if the page is valid and not equal to the current page\n                if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n                    // set the current page to the given page\n                    this.currentPage = page;\n                    this.getLogs(\"\")\n                }\n            },\n            gotTo(route){\n                router.push(route)\n            },\n            getHumanDate(dateData){\n                //  const res = dateData.split(\" \");\n                const dateObject = new Date(Date.parse(dateData));\n                return dateObject.toDateString();\n\n            },\n            getLogs(){\n                this.loading = true\n                const data = new FormData();\n                data.append(\"function\", \"getLogs\");\n                data.append(\"idNo\", sessionStorage.getItem('idNoUser'));\n                data.append(\"page\", this.currentPage);\n                data.append(\"rows_per_page\", this.pageSize);\n\n                execute(data,authUrl)\n                    .then((res) =>{\n                        this.loading = false\n                        if (res.data.success) {\n\n                            this.logs = res.data.data.logs\n                            this.user = res.data.data.user\n\n                            this.summary = res.data.data.resultSummary\n                            this.totalPages =  Math.ceil(this.summary.count / this.pageSize);\n\n                        }else{\n                            this.message =res.data.message\n                        }\n                    })\n                    .catch((e) => {\n                        //alert(e.message);\n                        this.message =e.message\n                    });\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}