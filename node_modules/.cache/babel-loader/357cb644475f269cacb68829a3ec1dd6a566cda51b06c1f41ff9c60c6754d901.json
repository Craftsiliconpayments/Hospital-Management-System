{"ast":null,"code":"import numWords from \"num-words\";\nimport { execute, parking } from \"@/api\";\nimport moment from \"moment\";\nexport default {\n  name: \"ParkingSticker\",\n  data() {\n    return {\n      link: '',\n      county: {\n        id: null,\n        countyID: null,\n        countyName: null,\n        tagline: null,\n        smsusername: null,\n        smspassword: null,\n        contact: null,\n        center: null,\n        address: null,\n        email: null,\n        headline: null,\n        tagline2: null,\n        ussd: null,\n        logo: null,\n        bank: null,\n        powered: null,\n        stateLogo: null,\n        seal: null,\n        signature: null,\n        lat: null,\n        lng: null,\n        link: null,\n        paysol: null,\n        poweredByLogo: null\n      },\n      stickers: [{\n        id: null,\n        parkingCode: null,\n        numberPlate: null,\n        duration: null,\n        category: null,\n        zone: null,\n        billTotal: null,\n        receiptAmount: null,\n        billBalance: null,\n        startDate: null,\n        endDate: null,\n        status: null,\n        transactionCode: null,\n        paymentMode: null,\n        street: null,\n        paidBy: null,\n        saccoID: null,\n        saccoName: null,\n        feeID: null\n      }],\n      sticker: {\n        id: null,\n        parkingCode: null,\n        numberPlate: null,\n        duration: null,\n        category: null,\n        zone: null,\n        billTotal: null,\n        receiptAmount: null,\n        billBalance: null,\n        startDate: null,\n        endDate: null,\n        status: null,\n        transactionCode: null,\n        paymentMode: null,\n        street: null,\n        paidBy: null,\n        saccoID: null,\n        saccoName: null,\n        feeID: null\n      }\n    };\n  },\n  computed: {\n    year() {\n      let date = new Date(this.permit.startDate);\n      let year = date.getFullYear();\n      return year;\n    }\n  },\n  mounted() {\n    /* let params = {}\n     try {\n          params = JSON.parse(localStorage['params'])\n         console.log('####'+ params.saccoID)\n         this.getStickers(params.saccoID);\n     } catch (error) {\n         // ignore\n     }*/\n\n    this.getStickers(\"4\");\n  },\n  methods: {\n    getLink(sticker) {\n      this.sticker = sticker;\n      const link = \"https://chart.googleapis.com/chart?chs=300x300&cht=qr&chl=NumberPlate:\" + this.sticker.numberPlate + \" |\\n \" + this.sticker.saccoName + \" | start date: \" + this.sticker.startDate + \" | Expiry:\" + this.sticker.endDate;\n      return link;\n    },\n    getStickers(saccoID) {\n      this.stickers.splice(0);\n      const data = new FormData();\n      data.append(\"function\", \"getStickers\");\n      data.append(\"saccoID\", saccoID);\n      execute(data, parking).then(res => {\n        if (res.data.success) {\n          this.stickers = res.data.data.stickers;\n          this.county = res.data.data.county;\n        } else {\n          alert(res.data.data.message);\n        }\n      }).catch(e => {\n        alert(e.message);\n      });\n    },\n    currentDate() {\n      let date = new Date();\n      let day = date.getDate();\n      let month = date.getMonth();\n      let year = date.getFullYear();\n      let hour = date.getHours();\n      let minute = date.getMinutes();\n      let suffix = hour >= 12 ? \"PM\" : \"AM\";\n      hour = hour % 12 || 12;\n      day = day < 10 ? \"0\" + day : day;\n      month = month < 10 ? \"0\" + (month + 1) : month + 1;\n      minute = minute < 10 ? \"0\" + minute : minute;\n      let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      let monthName = months[month - 1];\n      let formattedDate = `${day} ${monthName} ${year} ${hour}:${minute} ${suffix}`;\n      return formattedDate;\n    },\n    formattedDate(date2) {\n      let date = new Date(date2);\n      let day = date.getDate();\n      let month = date.getMonth();\n      let year = date.getFullYear();\n      let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      let monthName = months[month];\n      return `${day} ${monthName} ${year}`;\n    },\n    numberWords(num) {\n      return numWords(num);\n    },\n    showDate() {\n      const dateObj = new Date();\n      const currentDate = dateObj.getDate() + \"/\" + dateObj.getMonth() + \"/\" + dateObj.getFullYear();\n      return currentDate;\n    },\n    formatPrice(value) {\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n    formattedTime(time) {\n      return moment(time).format('hh:mm A');\n    },\n    numberFormat(num) {\n      const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n      return britishNumberFormatter.format(num);\n    }\n  }\n};","map":{"version":3,"names":["numWords","execute","parking","moment","name","data","link","county","id","countyID","countyName","tagline","smsusername","smspassword","contact","center","address","email","headline","tagline2","ussd","logo","bank","powered","stateLogo","seal","signature","lat","lng","paysol","poweredByLogo","stickers","parkingCode","numberPlate","duration","category","zone","billTotal","receiptAmount","billBalance","startDate","endDate","status","transactionCode","paymentMode","street","paidBy","saccoID","saccoName","feeID","sticker","computed","year","date","Date","permit","getFullYear","mounted","getStickers","methods","getLink","splice","FormData","append","then","res","success","alert","message","catch","e","currentDate","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","suffix","months","monthName","formattedDate","date2","numberWords","num","showDate","dateObj","formatPrice","value","val","toFixed","replace","toString","formattedTime","time","format","numberFormat","britishNumberFormatter","Intl","NumberFormat"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/biller/meru-biller/public/PrintDocs/Parking-Sticker/ParkingSticker.vue"],"sourcesContent":["<template>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Homa Bay County Parking Sticker</title>\n    <link rel=\"shortcut icon\" href=\"images/favicon.png\" type=\"image/x-icon\">\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Yellowtail&display=swap\" rel=\"stylesheet\">\n\n</head>\n\n<body style=\"padding: 0px; margin: 0px; font-family: 'Montserrat', sans-serif; background-color: white;box-sizing: border-box; display: flex; flex-wrap: wrap\" >\n\n    <button class=\"print-btn\" onclick=\"window.print()\"><img src=\"assets/printer.svg\" alt=\"Printer Icon\"></button>\n    <button class=\"print-btn email-doc\" title=\"send On Email\"><img src=\"assets/email-icon.png\" alt=\"Printer Icon \"></button>\n\n\n        \n    <page :key=\"index\" :value=\"item\" v-for=\"(item, index) in stickers\" class=\"page\" style=\"width: 80mm; min-height:80mm; margin-bottom: 7mm; display: flex; position: relative; flex-flow: column; background-color: white;background-image: url('assets/backgroundPtn.png');display: flex; flex-wrap: wrap\">\n        &lt;!&ndash; main content &ndash;&gt;\n        <div style=\"padding: 4.5mm; margin:2mm; display: flex; flex-flow: column; background-color: rgb(119 191 90 /13%); \">\n            <header style=\"display: flex;position: relative; width: 100%; justify-content: space-between; \">\n                <div>\n                    <img :src=\"county.stateLogo\" style=\"height: 11mm; margin-right: 0mm;\">\n                </div>\n                <div style=\"text-align: center; margin-right: 2.5mm; margin-left: 2.5mm;\">\n                    <h2 style=\"\n                        margin-top: 0px;\n                        font-size: 10px;\n                        text-transform: uppercase;\n                        color: #4ca82c;\n                        font-weight: 700;\n                        margin-bottom: 1.2mm;\n                        padding-bottom: 0px;\n\n                    \">\n                       {{county.countyName}} {{county.center}}\n                    </h2>\n\n                    <h4 style=\"padding: 0px;\n                    margin: 0px;\n                    font-size: 8px;\n                    display: non;\n                    font-weight: bold; text-transform: uppercase; margin-bottom: 2mm;\">\n                        {{item.duration}}\n                    </h4>\n\n                    <h4 style=\"padding: 0px;\n                    margin: 0px;\n                    font-size: 8px;\n                    font-weight: 400;\">\n                       {{item.saccoName}}<br>\n                       Valid Till {{item.endDate}}\n                    </h4>\n\n                    <h4 style=\"padding: 0px;\n                    margin: 0px;\n                    font-size: 8px;\n                    font-weight: 400; font-style: italic; font-family: 'Times New Roman', Times, serif; margin-top: 2mm;\">\n                       <span style=\"font-style: italic; font-family: 'Times New Roman', Times, serif; margin-right: 3mm;\">Processed On {{item.startDate}}</span>\n                    </h4>\n\n                </div>\n                <div>\n                    <img :src=\"county.logo\" style=\"height: 11mm; margin-right: 0mm;\">\n                </div>\n\n            </header>\n\n            <div>\n                <img src=\"assets/green-line.png\" style=\"width: 100%; display: none;\">\n            </div>\n\n            &lt;!&ndash; contact information and QR code &ndash;&gt;\n            <div style=\"display: flex; justify-content: center;\">\n\n                &lt;!&ndash; contact information &ndash;&gt;\n                <div style=\"font-size: 12px;align-items: center; justify-content: center; padding: 2.5mm; flex-flow: column; display: flex;\">\n                    <p style=\"padding: 0px; margin: 0px; padding-bottom: 2.5mm; text-align: center; text-transform: capitalize; font-weight: bold;\">{{item.numberPlate}} ({{item.category}})</p>\n                    <div style=\"position: relative; display: flex; \">\n                        <img :src=\"getLink(item)\" style=\"height: 22.6mm; margin: 1.25mm;\">\n                        <img src=\"assets/camera-frame.svg\" style=\"\n                        position: absolute;\n                        left: 0;\n                        height: 24.6mm;\n                    \">\n\n                    </div>\n\n                </div>\n\n\n            </div>\n\n            &lt;!&ndash; the table &ndash;&gt;\n\n            &lt;!&ndash; the table contents &ndash;&gt;\n\n\n            <div>\n                <img src=\"assets/green-line.png\" style=\"width: 100%; margin-bottom: 2mm; margin-top: 2mm;\">\n            </div>\n\n            <div style=\"display: flex; align-items: center; justify-content: space-between; margin-top: 2mm;\">\n                <span style=\"font-family: 'Yellowtail', cursive;  color: #4ca82c; line-height: 0.9; font-size: 20px;\">Thank You!</span>\n                <div style=\"display: flex; display: non; align-items: center; justify-content: center; font-size: 7px; margin-left: 2.5mm; text-transform: uppercase;\">\n                    <p style=\"text-transform: capitalize; font-family: 'Times New Roman', Times, serif; font-style:italic;\">{{county.powered}} </p>\n\n                    <div>\n                        <img style=\"\n                        height: 8mm;\n                        margin-left: 3mm;\" :src=\"county.poweredByLogo\" alt=\"\">\n                    </div>\n\n\n                </div>\n            </div>\n\n\n        </div>\n\n    </page>\n\n\n</body>\n\n</template>\n\n<script>\n    import numWords from \"num-words\";\n    import {execute, parking} from \"@/api\";\n    import moment from \"moment\";\n\n    export default {\n        name: \"ParkingSticker\",\n        data() {\n            return {\n                link:'',\n                county: {\n                    id: null,\n                    countyID: null,\n                    countyName: null,\n                    tagline: null,\n                    smsusername: null,\n                    smspassword: null,\n                    contact: null,\n                    center: null,\n                    address: null,\n                    email: null,\n                    headline: null,\n                    tagline2: null,\n                    ussd: null,\n                    logo: null,\n                    bank: null,\n                    powered: null,\n                    stateLogo:null,\n                    seal: null,\n                    signature: null,\n                    lat: null,\n                    lng:null,\n                    link: null,\n                    paysol: null,\n                    poweredByLogo: null\n                },\n                stickers: [\n                    {\n                        id:null,\n                        parkingCode:null,\n                        numberPlate:null,\n                        duration: null,\n                        category: null,\n                        zone: null,\n                        billTotal: null,\n                        receiptAmount: null,\n                        billBalance: null,\n                        startDate: null,\n                        endDate: null,\n                        status: null,\n                        transactionCode: null,\n                        paymentMode: null,\n                        street: null,\n                        paidBy: null,\n                        saccoID: null,\n                        saccoName:null,\n                        feeID: null\n                    }],\n                sticker:\n                    {\n                        id: null,\n                        parkingCode: null,\n                        numberPlate: null,\n                        duration: null,\n                        category: null,\n                        zone: null,\n                        billTotal: null,\n                        receiptAmount: null,\n                        billBalance: null,\n                        startDate: null,\n                        endDate: null,\n                        status: null,\n                        transactionCode: null,\n                        paymentMode: null,\n                        street: null,\n                        paidBy: null,\n                        saccoID: null,\n                        saccoName: null,\n                        feeID: null\n                    }\n            };\n        },\n        computed: {\n            year() {\n                let date = new Date(this.permit.startDate);\n                let year = date.getFullYear();\n                return year;\n            }},\n        mounted() {\n           /* let params = {}\n            try {\n\n                params = JSON.parse(localStorage['params'])\n                console.log('####'+ params.saccoID)\n                this.getStickers(params.saccoID);\n            } catch (error) {\n                // ignore\n            }*/\n\n            this.getStickers(\"4\");\n\n        },\n        methods: {\n            getLink(sticker){\n                this.sticker = sticker;\n                const link = \"https://chart.googleapis.com/chart?chs=300x300&cht=qr&chl=NumberPlate:\" + this.sticker.numberPlate + \" |\\n \"\n                    + this.sticker.saccoName + \" | start date: \" + this.sticker.startDate + \" | Expiry:\" + this.sticker.endDate;\n\n                return link;\n            },\n            getStickers(saccoID) {\n                this.stickers.splice(0)\n                const data = new FormData();\n                data.append(\"function\", \"getStickers\");\n                data.append(\"saccoID\", saccoID);\n\n                execute(data,parking)\n                    .then((res) => {\n                        if (res.data.success) {\n                            this.stickers = res.data.data.stickers\n                            this.county = res.data.data.county\n\n                        } else {\n                            alert(res.data.data.message);\n                        }\n                    })\n                    .catch((e) => {\n                        alert(e.message);\n                    });\n            },\n            currentDate(){\n                let date = new Date();\n                let day = date.getDate();\n                let month = date.getMonth();\n                let year = date.getFullYear();\n                let hour = date.getHours();\n                let minute = date.getMinutes();\n                let suffix = hour >= 12 ? \"PM\" : \"AM\";\n                hour = hour % 12 || 12;\n                day = day < 10 ? \"0\" + day : day;\n                month = month < 10 ? \"0\" + (month + 1) : month + 1;\n                minute = minute < 10 ? \"0\" + minute : minute;\n                let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n                let monthName = months[month - 1];\n                let formattedDate = `${day} ${monthName} ${year} ${hour}:${minute} ${suffix}`;\n                return formattedDate;\n            },\n            formattedDate(date2) {\n                let date = new Date(date2);\n                let day = date.getDate();\n                let month = date.getMonth();\n                let year = date.getFullYear();\n                let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n                let monthName = months[month];\n                return `${day} ${monthName} ${year}`;\n            },\n\n            numberWords(num){\n                return numWords(num)\n            },\n\n            showDate() {\n                const dateObj = new Date();\n                const currentDate =\n                    dateObj.getDate() +\n                    \"/\" +\n                    dateObj.getMonth() +\n                    \"/\" +\n                    dateObj.getFullYear();\n                return currentDate;\n            },\n            formatPrice(value) {\n                let val = (value / 1).toFixed(2).replace(\".\", \",\");\n                return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n            },\n            formattedTime(time) {\n                return moment(time).format('hh:mm A')\n            },\n            numberFormat(num) {\n                const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n                return britishNumberFormatter.format(num)\n            },\n        },\n    }\n</script>\n\n\n<style scoped>\n    * {\n        box-sizing: border-box;\n        font-family: 'Montserrat', sans-serif;\n        -webkit-print-color-adjust: exact !important;\n        /* Chrome, Safari */\n        color-adjust: exact !important;\n        /*Firefox*/\n    }\n\n    .print-btn {\n        display: flex;\n        z-index: 1000000000;\n        position: fixed;\n        background: #4aaa23;\n        color: white;\n        top: 30px;\n        right: 30px;\n        border-radius: 50%;\n        padding: 1rem;\n        margin: 0px;\n        border: none;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-shadow: 1px 0px 20px 4px rgb(136 136 136 / 65%);\n        cursor: pointer;\n        transition: 0.4s;\n    }\n    .email-doc{\n        top: 130px;\n        background: #0063c0;\n    }\n    .print-btn img {\n        height: 35px;\n    }\n\n    @media print {\n        .print-btn {\n            display: none;\n        }\n        body {\n            margin: 0px !important;\n            padding: 0px !important;\n            background-color: white;\n        }\n        @page {\n            /* size: auto; */\n            /* auto is the initial value */\n            /* this affects the margin in the printer settings */\n            /* width: 210mm;*/\n            /* height: 297mm; */\n            size: A4 portrait;\n            margin: 0px;\n            margin-bottom: 0px;\n            margin: 0px;\n        }\n    }\n\n    @page {\n        /* size: auto; */\n        /* auto is the initial value */\n        /* this affects the margin in the printer settings */\n        /* width: 210mm;\n            height: 297mm; */\n        size: A4 portrait;\n        margin: 0px;\n        margin-bottom: 0px;\n        margin: 0px;\n    }\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}