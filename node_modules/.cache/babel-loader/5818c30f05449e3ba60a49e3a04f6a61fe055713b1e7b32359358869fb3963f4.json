{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/* eslint-disable */\n\nimport NavigationBar from \"@/components/Navigation\";\nimport { paysol, execute, execute2, biller, executeDownload } from \"@/api\";\nimport moment from \"moment/moment\";\nexport default {\n  name: \"printReceipt\",\n  components: {\n    NavigationBar\n  },\n  data() {\n    return {\n      search: '',\n      download: 'Download Report',\n      // set the initial current page as 1\n      currentPage: 1,\n      // set the total number of pages as 10 (you can change this according to your data source)\n      totalPages: 0,\n      // set the number of items per page as 5 (you can change this according to your preference)\n      pageSize: 10,\n      summary: {\n        count: 0,\n        total: 0\n      },\n      totalAmount: null,\n      dateTo: '',\n      dateFrom: '',\n      statement: '',\n      message: null,\n      loading: false,\n      selectedFile: null,\n      alert: {\n        success: false,\n        info: false,\n        failed: false\n      },\n      ReconTransactions: [{\n        date: null,\n        transactionCode: null,\n        description: null,\n        amount: null,\n        available: null\n      }]\n    };\n  },\n  mounted() {\n    this.ReconTransactions.splice(0);\n    this.getReconciledRecords();\n    this.menuAccess();\n    this.$watch('dateFrom', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {} else {\n        this.getReconciledRecords(\"\");\n      }\n    });\n    this.$watch('dateTo', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {} else {\n        this.getReconciledRecords(\"\");\n      }\n    });\n  },\n  beforeDestroy() {\n    // Clear the interval when the component is destroyed to avoid memory leaks\n    clearInterval(this.intervalId);\n  },\n  watch: {\n    //pagination code\n    // define a watcher for the pageSize property\n    pageSize(newPageSize) {\n      this.getReconciledRecords(\"\");\n      // get the total number of items from your data source (you can change this according to your logic)\n      const totalItems = this.summary.count;\n      // calculate the new total pages by dividing the total items by the new page size and rounding up\n      const newTotalPages = Math.ceil(totalItems / newPageSize);\n      // update the totalPages data property with the new value\n      this.totalPages = newTotalPages;\n      // reset the current page to 1\n      this.currentPage = 1;\n    },\n    search() {\n      this.getReconciledRecords();\n    }\n  },\n  methods: {\n    menuAccess() {\n      const data = new FormData();\n      data.append(\"function\", \"menuAccess\");\n      data.append(\"menu\", \"Recon Details\");\n      data.append(\"sessionNames\", sessionStorage.getItem(\"sessionNames\"));\n      data.append(\"sessionIdNo\", sessionStorage.getItem(\"sessionIdNo\"));\n      execute(data, biller).then(res => {\n        // alert(res.data.message);\n      }).catch(e => {\n        // alert(e.message);\n      });\n    },\n    //pagination code\n    pagination(currentPage, totalPages, maxVisibleButtons) {\n      //initialize an empty array for the pages\n      let pages = [];\n      //calculate the start and end indices of the visible buttons\n      let start = currentPage - Math.floor(maxVisibleButtons / 2);\n      let end = currentPage + Math.floor(maxVisibleButtons / 2);\n      //adjust the start and end indices if they are out of bounds\n      if (start < 1) {\n        start = 1;\n        end = start + maxVisibleButtons - 1;\n        if (end > totalPages) {\n          end = totalPages;\n        }\n      }\n      if (end > totalPages) {\n        end = totalPages;\n        start = end - maxVisibleButtons + 1;\n        if (start < 1) {\n          start = 1;\n        }\n      }\n      //loop through the start and end indices and push the pages to the array\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      //add an ellipsis at the beginning if there are more pages before the start index\n      if (start > 1) {\n        pages.unshift(\"...\");\n      }\n      //add an ellipsis at the end if there are more pages after the end index\n      if (end < totalPages) {\n        pages.push(\"...\");\n      }\n      // return the array of pages\n      return pages;\n    },\n    // define a method to go to the previous page\n    prevPage() {\n      // check if the current page is not the first page\n      if (this.currentPage > 1) {\n        // decrement the current page by 1\n        this.currentPage--;\n        this.getReconciledRecords(\"\");\n      }\n    },\n    // define a method to go to the next page\n    nextPage() {\n      // check if the current page is not the last page\n      if (this.currentPage < this.totalPages) {\n        // increment the current page by 1\n        this.currentPage++;\n        this.getReconciledRecords(\"\");\n      }\n    },\n    // define a method to go to a specific page\n    goToPage(page) {\n      // check if the page is valid and not equal to the current page\n      if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n        // set the current page to the given page\n        this.currentPage = page;\n        this.getReconciledRecords(\"\");\n      }\n    },\n    //number format\n    numberFormat(num) {\n      const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n      return britishNumberFormatter.format(num);\n    },\n    formatDateTime(dateTimeStr) {\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const date = new Date(dateTimeStr);\n      if (isNaN(date.getTime())) {\n        return 'Invalid Date';\n      }\n      const day = date.getDate();\n      const month = months[date.getMonth()];\n      const year = date.getFullYear();\n      let hours = date.getHours();\n      const minutes = date.getMinutes();\n      const period = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12;\n      hours = hours ? hours : 12; // Handle midnight (00:00) as 12 AM\n\n      const formattedDateTime = `${day} ${month} ${year} At ${hours}:${minutes.toString().padStart(2, '0')} ${period}`;\n      return formattedDateTime;\n    },\n    showDate() {\n      const dateObj = new Date();\n      const currentDate = dateObj.getDate() + \"/\" + dateObj.getMonth() + \"/\" + dateObj.getFullYear();\n      return currentDate;\n    },\n    formatPrice(value) {\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n    closeModal() {\n      // Add any additional logic you need before closing the modal\n      // For example, you may want to reset some data or perform an action\n      // Then, close the modal\n      $('#uploadFile').modal('hide'); // Assuming you're using Bootstrap modal\n    },\n\n    downloadReconciledRecords() {\n      this.download = \"Please wait..\";\n      const data = new FormData();\n      data.append(\"function\", \"downloadReconciledRecords\");\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      executeDownload(data, biller).then(response => {\n        this.download = \"Download Report\";\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(response.data);\n        link.download = this.dateFrom + ' to ' + this.dateTo + \"Reports.csv\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    },\n    getReconciledRecords() {\n      this.loading = true;\n      const data = new FormData();\n      data.append(\"function\", \"getReconciledRecords\");\n      data.append(\"page\", this.currentPage);\n      data.append(\"rows_per_page\", this.pageSize);\n      data.append(\"search\", this.search);\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      // Assuming 'pay' is defined\n      execute(data, biller).then(res => {\n        if (res.data.success) {\n          this.loading = false;\n          this.ReconTransactions = res.data.data.ReconTransactions;\n          this.summary = res.data.data.summary;\n          this.totalPages = Math.ceil(this.summary.count / this.pageSize);\n        } else {\n          this.loading = false;\n        }\n      }).catch(e => {});\n    },\n    getFileName(filePath) {\n      const parts = filePath.split('/');\n\n      // Get the last part (the filename)\n      const filename = parts[parts.length - 1];\n      return filename;\n    },\n    formattedTime(time) {\n      return moment(time).format('hh:mm A');\n    }\n  }\n};","map":{"version":3,"names":["NavigationBar","paysol","execute","execute2","biller","executeDownload","moment","name","components","data","search","download","currentPage","totalPages","pageSize","summary","count","total","totalAmount","dateTo","dateFrom","statement","message","loading","selectedFile","alert","success","info","failed","ReconTransactions","date","transactionCode","description","amount","available","mounted","splice","getReconciledRecords","menuAccess","$watch","newValue","beforeDestroy","clearInterval","intervalId","watch","newPageSize","totalItems","newTotalPages","Math","ceil","methods","FormData","append","sessionStorage","getItem","then","res","catch","e","pagination","maxVisibleButtons","pages","start","floor","end","i","push","unshift","prevPage","nextPage","goToPage","page","numberFormat","num","britishNumberFormatter","Intl","NumberFormat","format","formatDateTime","dateTimeStr","months","Date","isNaN","getTime","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","period","formattedDateTime","toString","padStart","showDate","dateObj","currentDate","formatPrice","value","val","toFixed","replace","closeModal","$","modal","downloadReconciledRecords","response","link","document","createElement","href","URL","createObjectURL","body","appendChild","click","removeChild","getFileName","filePath","parts","split","filename","length","formattedTime","time"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/biller/meru-biller/src/components/recon/AllReconDetails.vue"],"sourcesContent":["<template>\n\n  <head>\n\n    <meta charset=\"utf-8\" />\n    <title>NTSA | Keep Our Roads safe</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta content=\"Keep your finances and membership up to date\" name=\"description\" />\n    <meta content=\"Kelvin Njuguna Ndungu\" name=\"author\" />\n    <!-- App favicon -->\n    <link rel=\"shortcut icon\" href=\"assets/images/favicon.svg\">\n    <!-- droping file -->\n    <link href=\"assets/libs/dropzone/min/dropzone.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n    <link href=\"assets/libs/bootstrap-datepicker/css/bootstrap-datepicker.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href=\"assets/libs/spectrum-colorpicker2/spectrum.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href=\"assets/libs/bootstrap-timepicker/css/bootstrap-timepicker.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href=\"assets/libs/bootstrap-touchspin/jquery.bootstrap-touchspin.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <link rel=\"stylesheet\" href=\"assets/libs/%40chenfengyuan/datepicker/datepicker.min.css\">\n\n    <!-- DataTables -->\n    <link href=\"assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <link href=\"assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n    <!-- Bootstrap Css -->\n    <link href=\"assets/css/bootstrap.min.css\" id=\"bootstrap-style\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- Bootstrap select styling -->\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n    <!-- Icons Css -->\n    <link href=\"assets/css/icons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- App Css-->\n    <link href=\"assets/css/app.min.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n    <!-- custom Css-->\n    <link href=\"assets/css/custom.css\" id=\"app-style\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n  </head>\n\n  <body @contextmenu.prevent data-sidebar=\"dark\">\n\n  <!-- Begin page -->\n  <div id=\"layout-wrapper\">\n\n    <NavigationBar/>\n    <div class=\"content-minimize\">\n\n      <div class=\"page-content\">\n        <div class=\"container-fluid\">\n\n          <!-- start page title -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n                <h4 class=\"mb-sm-0 font-size-18\">County Biller Auto Reconciliation</h4>\n\n                <div class=\"page-title-right\">\n                  <ol class=\"breadcrumb m-0\">\n                    <li class=\"breadcrumb-item\"><a href=\"javascript: void(0);\">Dashboard</a></li>\n                    <li class=\"breadcrumb-item active\">Auto Reconciliation</li>\n                  </ol>\n                </div>\n\n              </div>\n            </div>\n          </div>\n          <!-- end page title -->\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"card\">\n                <div class=\"card-header d-flex justify-content-between align-items-center bg-white border-bottom\">\n                  <div>\n                    <h4 class=\"card-title m-0 text-uppercase d-none\">\n                      Missing Transactions\n                    </h4>\n                  </div>\n                  <div>\n                    <!--                                        <button class=\"btn btn-success me-3\" data-bs-toggle=\"modal\" data-bs-target=\"#singleTrans\"><i class=\"mdi mdi-briefcase-search font-size-16 align-middle me-2\"></i> Single Transaction</button>-->\n<!--                    <button class=\"btn-dark btn\" data-bs-toggle=\"modal\" data-bs-target=\"#uploadFile\" > <i class=\"mdi-file-document-multiple-outline mdi font-size-16 align-middle me-2\"></i>  Upload File</button>-->\n                  </div>\n                </div>\n\n                <div class=\"card-header d-flex justify-content-between align-items-center bg-white border-bottom\">\n                  <div>\n                    <h4 class=\"card-title m-0 text-uppercase\">\n                      Reconciliations History\n                    </h4>\n                  </div>\n                  <!--                                    <div class=\"d-flex\">\n                                                          <div class=\"d-flex align-items-center me-3 pe-3\">\n                                                              <span class=\"pr-3 fw-semibold\">From:</span>\n                                                              <input class=\"form-control\" placeholder=\"Start date\" type=\"date\">\n                                                              <span class=\"px-3 fw-semibold\">TO:</span>\n                                                              <input class=\"form-control\" placeholder=\"Start date\" type=\"date\">\n                                                          </div>\n                                                          <button data-bs-toggle=\"modal\" data-bs-target=\".download-modal\" type=\"button\" class=\"btn btn-primary dropdown-toggle option-selector me-3 text-capitalize\">\n                                                              <i class=\"bx bxs-download  font-size-16\"></i> <span class=\"pl-1 d-md-inline\">Download Report</span>\n                                                          </button>\n\n                                                      </div>-->\n                </div>\n\n                <div class=\"btn-toolbar p-3 d-flex justify-content-between align-items-center w-100\" role=\"toolbar\">\n\n                  <div class=\"flex-grow-1\">\n                    <div class=\"search-box mb-0 me-3\">\n                      <div class=\"position-relative\">\n                        <input v-model=\"search\" type=\"text\" class=\"form-control bg-light border-light rounded\" placeholder=\"Search...\" fdprocessedid=\"husj3l\">\n                        <i class=\"bx bx-search-alt search-icon\"></i>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"d-flex\">\n                    <div class=\"d-flex align-items-center me-3 pe-3\">\n                      <span class=\"pr-3 fw-semibold\">From:</span>\n                      <input v-model=\"dateFrom\" class=\"form-control\" placeholder=\"Start date\" type=\"date\">\n                      <span class=\"px-3 fw-semibold\">TO:</span>\n                      <input v-model=\"dateTo\"  class=\"form-control\" placeholder=\"Start date\" type=\"date\">\n                    </div>\n\n                    <button @click=\"downloadReconciledRecords\"  data-bs-toggle=\"modal\" data-bs-target=\".download-modal\" type=\"button\" class=\"btn btn-primary dropdown-toggle option-selector me-3 text-capitalize\">\n                      <i class=\"bx bxs-download  font-size-16\"></i> <span class=\"pl-1 d-md-inline\">{{download}}</span>\n                    </button>\n\n                  </div>\n\n                </div>\n\n\n                <div class=\"card-body\">\n\n                  <div class=\"table-responsive\">\n\n\n                    <table class=\"table align-middle table-striped table-nowrap table-hover dt-responsive contacts-table\" id=\" \">\n                      <thead class=\"table-dark\">\n                      <tr>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Transaction Code</th>\n                        <th scope=\"col\">Amount</th>\n                        <th scope=\"col\">Description</th>\n\n                      </tr>\n                      </thead>\n\n                      <tbody>\n                      <tr  :key=\"index\" :value=\"item\" v-for=\"(item, index) in ReconTransactions\">\n                        <td>\n                          {{item.date}}\n                        </td>\n                        <td>\n                          {{item.transactionCode}}\n                        </td>\n                        <td>KES {{formatPrice(item.amount)}}</td>\n                        <th>\n                          <p v-if=\"item.available ==='1'\"  style=\"color: darkblue\" > {{item.description}}</p>\n                          <p style=\"color: green\" v-if=\"item.available ==='0'\">> {{item.description}}</p>\n                        </th>\n\n                      </tr>\n\n                      </tbody>\n<!--                      <tfoot class=\"table-dark\">\n                      <tr>\n                        <td class=\"\" colspan=\"3\">23 Recociliations</td>\n                        <td class=\"text-uppercase\">KCB Bank:45  MPESA:546 </td>\n                        <td>234 of 67000</td>\n                        <td>23 Users</td>\n                        <td class=\"text-uppercase text-right\">KES 450,000</td>\n                        <td></td>\n                      </tr>\n                      </tfoot>-->\n                    </table>\n\n                    <div v-if=\"loading\" class=\"card-body px-5 d-flex flex-column justify-items-center align-items-center text-center d-flex justify-content-center\">\n                      <div class=\"p-5 py-0 pt-3\">\n                        <div class=\"p-5\">\n                          <div class=\"spinner-border text-info m-1\" role=\"status\">\n                            <span class=\"sr-only text-uppercase\">Loading...</span>\n                          </div>\n                        </div>\n                      </div>\n                      <h4 class=\"text-uppercase\">Loading Data</h4>\n                      <div class=\"col-sm-12 col-md-8 col-lg-5\">\n                        <p>We are fetching the data for you. It will be ready soon. Please wait and have fun. Thank you for your interest.</p>\n\n                      </div>\n                    </div>\n                    <div v-if=\"ReconTransactions.length<1 & loading === false\" class=\"card-body d-sm-none d-md-block px-5 d-flex flex-column justify-items-center align-items-center text-center\">\n                      <div class=\"p-5 py-0 pt-3\">\n                        <img :src=\"'./assets/images/no-results.png'\" class=\"img mb-4\"  alt=\"No search results\"/>\n                      </div>\n                      <h4>No Results To Show</h4>\n                      <p>Sorry, we could not find any results that match your search or filter criteria. Please try using different keywords or filters.</p>\n                    </div>\n\n                  </div>\n                </div>\n\n                <div class=\"card-footer bg-white\">\n                  <nav aria-label=\"Page navigation example \"\n                       class=\"d-flex align-items-center justify-content-between\">\n\n                    <div class=\"d-flex align-items-center\">\n                                            <span class=\"pr-3 pb-0 mb-0 font-13px\">\n                                                <span>Rows Per Page</span>\n                                            </span>\n                      <select class=\"form-select w-auto font-13px \" v-model=\"pageSize\">\n                        <option value=\"10\">10 Rows</option>\n                        <option value=\"25\">25 Rows</option>\n                        <option value=\"50\">50 Rows</option>\n                        <option value=\"100\">100 Rows</option>\n                        <option value=\"150\">150 Rows</option>\n                        <option value=\"200\">200 Rows</option>\n                        <option value=\"5000\">500 Rows</option>\n                        <option value=\"10000\">10000 Rows</option>\n                        <option value=\"20000\">20000 Rows</option>\n                        <option value=\"10000000000\">All Rows</option>\n                      </select>\n                    </div>\n\n                    <ul class=\"pagination\">\n                      <!-- add a class of disabled and an attribute of disabled when the current page is the first page -->\n                      <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                        <a class=\"page-link\" tabindex=\"-1\" @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</a>\n                      </li>\n                      <!-- replace the v-for directive with the pagination function call -->\n                      <li v-for=\"page in pagination(currentPage, totalPages, 3)\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\n                        <!-- check if the page is an ellipsis and display it as plain text -->\n                        <span v-if=\"page === '...'\" class=\"page-link\">{{ page }}</span>\n                        <!-- otherwise, display it as a clickable link -->\n                        <a v-else class=\"page-link\" @click=\"goToPage(page)\">{{ page }}</a>\n                      </li>\n                      <!-- add a class of disabled and an attribute of disabled when the current page is the last page -->\n                      <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                        <a class=\"page-link\"  @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</a>\n                      </li>\n                    </ul>\n\n\n                  </nav>\n                </div>\n\n              </div>\n            </div>\n            <!-- end col -->\n          </div>\n\n        </div>\n        <!-- container-fluid -->\n      </div>\n      <!-- End Page-content -->\n\n\n      <!-- bootstrap modal -->\n      <div class=\"modal fade\" id=\"uploadFile\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Upload Transactions File</h5>\n\n              <button @click=\"closeModal\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n\n            </div>\n            <div class=\"modal-body\">\n\n              <div class=\"d-flex align-items-center me-3 pe-3\">\n                <span class=\"pr-3 fw-semibold\">From:</span>\n                <input v-model=\"dateFrom\" class=\"form-control\" placeholder=\"Start date\" type=\"date\">\n                <span class=\"px-3 fw-semibold\">TO:</span>\n                <input v-model=\"dateTo\" class=\"form-control\" placeholder=\"Start date\" type=\"date\">\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-lg-12\">\n                  <div>\n                    <label class=\"form-label\">Select File Source</label>\n                    <select class=\"form-control  form-select\" title=\"Select Revenue Stream\" data-live-search=\"true\" v-model=\"statement\">\n                      <option value=\"MPESA\">MPESA Transactions</option>\n                      <option value=\"KCB\">KCB BANK Transactions</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-12\">\n                  <div class=\"mt-4\">\n\n                    <div class=\"fallback,dropzone\">\n                      <div>\n                        <input\n                            name=\"file\"\n                            type=\"file\"\n                            @change=\"handleFileChange($event)\"\n                        />\n                        <div v-if=\"selectedFile\">\n                          <h3>Selected File:</h3>\n                          <p>{{ selectedFile.name }}</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"dz-message needsclick\">\n                      <div class=\"mb-3\">\n                        <i class=\"display-4 text-muted bx bxs-cloud-upload\"></i>\n                      </div>\n\n                      <h4>Drop files here or click to upload.</h4>\n                    </div>\n\n                  </div>\n                </div>\n\n                <!-- show alerts here once transactions are uploaded -->\n\n                <div v-if=\"message!=null\" class=\"col-12\">\n\n                  <!--                                <div v-if=\"alert.failed\" class=\"mt-2\">\n                                                      <div class=\"alert alert-danger\" role=\"alert\">\n                                                          Upload Failed <a href=\"javascript: void(0);\" class=\"alert-link\">{{message}}</a>. Upload correct file format to continue.\n                                                          </div>\n                                                  </div>-->\n\n                  <div  v-if=\"alert.success\" class=\"mt-2\">\n                    <div class=\"alert alert-success\" role=\"alert\">\n                      Reconciliations Completed <a href=\"javascript: void(0);\" class=\"alert-link\">{{message}}</a> <br>\n\n                      <!--                                        <a href=\"recon-details.html\" class=\"mt-3\">View The Transactions</a>-->\n                    </div>\n                  </div>\n\n                  <!--                                <div class=\"mt-2\">\n                                                      <div class=\"alert alert-secondary\" role=\"alert\">\n                                                          Upload Completed <a href=\"javascript: void(0);\" class=\"alert-link\">The transactions were correctly reconciled initially</a>\n                                                      </div>\n                                                  </div>-->\n\n                </div>\n\n                <div class=\"col-12\">\n                  <button @click=\"uploadExcelToQue()\" class=\"btn btn-primary w-100 mt-2\">Continue</button>\n                </div>\n\n              </div>\n            </div>\n\n            <div v-if=\"loading\" class=\"modal-body\">\n              <div class=\"modal-loader\">\n                <div class=\"d-flex justify-content-center align-items-center p-5\">\n                  <div class=\"spinner-border text-primary m-1\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      <!-- end of changing revenue stream modal -->\n      <div class=\"modal fade\" id=\"singleTrans\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Transaction Search</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-12\">\n                  <div>\n                    <label class=\"form-label\">Select File Source</label>\n                    <select class=\"form-control  form-select\"  data-live-search=\"true\" title=\"Select a tenant\">\n                      <option value=\" \">MPESA Transactions</option>\n                      <option value=\" \">KCB BANK Transactions</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-12\">\n                  <div class=\"mt-3\">\n                    <label class=\"form-label\">Enter Refrece code (MPESA Transaction Code)</label>\n                    <input type=\"text\" placeholder=\"Enter Transaction Code\" class=\"form-control\">\n                  </div>\n                </div>\n\n                <!-- show alerts here once transactions are uploaded -->\n\n                <div class=\"col-12\">\n                  <div class=\"mt-2\">\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                      <a href=\"javascript: void(0);\" class=\"alert-link\">Transaction Not Found.</a> Try again.\n                    </div>\n                  </div>\n\n                  <div class=\"mt-2\">\n                    <div class=\"alert alert-success\" role=\"alert\">\n                      <a href=\"javascript: void(0);\" class=\"alert-link\">Transaction succesfully Reconciled </a>\n                    </div>\n                  </div>\n\n                  <div class=\"px-3 border-1\">\n                    <table class=\"table-sm table\">\n                      <tr>\n                        <th>Transaction Code</th>\n                        <td>RCTYIOS</td>\n                      </tr>\n\n                      <tr>\n                        <th>Paid By</th>\n                        <td>Kelvin Kinot</td>\n                      </tr>\n\n                      <tr>\n                        <th>Phone No. </th>\n                        <td>0704****59</td>\n                      </tr>\n\n                      <tr>\n                        <th>Bill No.</th>\n                        <td>BLL90808</td>\n                      </tr>\n\n                      <tr>\n                        <th>Transaction Date</th>\n                        <td>12 Dec 2023 11:38 PM</td>\n                      </tr>\n\n                      <tr>\n                        <th>Sub County</th>\n                        <td>Homa Bay town</td>\n                      </tr>\n\n                      <tr>\n                        <th>Zone</th>\n                        <td>Homa Bay Town Bus Park</td>\n                      </tr>\n\n                      <tr>\n                        <th>Payment For</th>\n                        <td>KBD123Y Daily Parking</td>\n                      </tr>\n\n                      <tr>\n                        <th>Initiated By</th>\n                        <td>Tom Otieno</td>\n                      </tr>\n                    </table>\n                  </div>\n\n                  <div class=\"mt-2\">\n                    <div class=\"alert alert-secondary\" role=\"alert\">\n                      Failed <a href=\"javascript: void(0);\" class=\"alert-link\">Transactio had been reconciled initially</a>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-12\">\n                  <button class=\"btn btn-primary w-100 mt-2\">Continue</button>\n                </div>\n\n              </div>\n            </div>\n\n            <div class=\"modal-body\">\n              <div class=\"modal-loader\">\n                <div class=\"d-flex justify-content-center align-items-center p-5\">\n                  <div class=\"spinner-border text-primary m-1\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      <!-- end of transaction modal -->\n\n      single transaction <div id=\"my-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <p>Content</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n      <footer class=\"footer \">\n        <div class=\"container-fluid \">\n          <div class=\"row \">\n            <div class=\"col-sm-6 \">\n\n            </div>\n            <div class=\"col-sm-6 \">\n              <div class=\"text-sm-end d-sm-block \">\n                Best Birdy Billing system.\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n    <!-- end main content-->\n  </div>\n  <!-- END layout-wrapper -->\n\n  <!-- Right bar overlay-->\n  <div class=\"rightbar-overlay \"></div>\n\n  </body>\n\n</template>\n<script>\n/* eslint-disable */\n\nimport NavigationBar from \"@/components/Navigation\";\nimport {paysol, execute, execute2, biller, executeDownload} from \"@/api\";\nimport moment from \"moment/moment\";\nexport default {\n  name: \"printReceipt\",\n  components: {NavigationBar},\n  data() {\n    return {\n      search:'',\n      download:'Download Report',\n      // set the initial current page as 1\n      currentPage: 1,\n      // set the total number of pages as 10 (you can change this according to your data source)\n      totalPages: 0,\n      // set the number of items per page as 5 (you can change this according to your preference)\n      pageSize: 10,\n      summary: {\n        count: 0,\n        total: 0\n      },\n      totalAmount: null,\n      dateTo:'',\n      dateFrom:'',\n      statement:'',\n      message:null,\n      loading: false,\n      selectedFile: null,\n\n      alert:{\n        success: false,\n        info: false,\n        failed:false\n      },\n      ReconTransactions: [\n        {\n          date: null,\n          transactionCode: null,\n          description: null,\n          amount: null,\n          available: null,\n        }\n      ]\n    };\n  },\n  mounted() {\n    this.ReconTransactions.splice(0)\n    this.getReconciledRecords();\n    this.menuAccess()\n\n    this.$watch('dateFrom', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {\n\n      } else {\n        this.getReconciledRecords(\"\")\n      }\n\n    })\n    this.$watch('dateTo', function (newValue) {\n      if (this.dateFrom === '' || this.dateTo === '') {\n\n      } else {\n        this.getReconciledRecords(\"\")\n      }\n    })\n\n  },\n  beforeDestroy() {\n    // Clear the interval when the component is destroyed to avoid memory leaks\n    clearInterval(this.intervalId);\n  },\n  watch: {\n    //pagination code\n    // define a watcher for the pageSize property\n    pageSize(newPageSize) {\n      this.getReconciledRecords(\"\")\n      // get the total number of items from your data source (you can change this according to your logic)\n      const totalItems = this.summary.count;\n      // calculate the new total pages by dividing the total items by the new page size and rounding up\n      const newTotalPages = Math.ceil(totalItems / newPageSize);\n      // update the totalPages data property with the new value\n      this.totalPages = newTotalPages;\n      // reset the current page to 1\n      this.currentPage = 1;\n\n    },\n    search(){\n      this.getReconciledRecords()\n    },\n\n  },\n  methods: {\n\n\n\n    menuAccess(){\n\n      const data = new FormData();\n      data.append(\"function\", \"menuAccess\");\n      data.append(\"menu\", \"Recon Details\");\n      data.append(\"sessionNames\", sessionStorage.getItem(\"sessionNames\"));\n      data.append(\"sessionIdNo\",  sessionStorage.getItem(\"sessionIdNo\"));\n      execute(data,biller)\n          .then((res) => {\n            // alert(res.data.message);\n          })\n          .catch((e) => {\n            // alert(e.message);\n          });\n\n    },\n\n    //pagination code\n    pagination(currentPage, totalPages, maxVisibleButtons) {\n      //initialize an empty array for the pages\n      let pages = [];\n      //calculate the start and end indices of the visible buttons\n      let start = currentPage - Math.floor(maxVisibleButtons / 2);\n      let end = currentPage + Math.floor(maxVisibleButtons / 2);\n      //adjust the start and end indices if they are out of bounds\n      if (start < 1) {\n        start = 1;\n        end = start + maxVisibleButtons - 1;\n        if (end > totalPages) {\n          end = totalPages;\n        }\n      }\n      if (end > totalPages) {\n        end = totalPages;\n        start = end - maxVisibleButtons + 1;\n        if (start < 1) {\n          start = 1;\n        }\n      }\n      //loop through the start and end indices and push the pages to the array\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      //add an ellipsis at the beginning if there are more pages before the start index\n      if (start > 1) {\n        pages.unshift(\"...\");\n      }\n      //add an ellipsis at the end if there are more pages after the end index\n      if (end < totalPages) {\n        pages.push(\"...\");\n      }\n// return the array of pages\n      return pages;\n    },\n    // define a method to go to the previous page\n    prevPage() {\n      // check if the current page is not the first page\n      if (this.currentPage > 1) {\n        // decrement the current page by 1\n        this.currentPage--;\n        this.getReconciledRecords(\"\")\n      }\n    },\n    // define a method to go to the next page\n    nextPage() {\n      // check if the current page is not the last page\n      if (this.currentPage < this.totalPages) {\n        // increment the current page by 1\n        this.currentPage++;\n        this.getReconciledRecords(\"\")\n      }\n    },\n    // define a method to go to a specific page\n    goToPage(page) {\n      // check if the page is valid and not equal to the current page\n      if (page > 0 && page <= this.totalPages && page !== this.currentPage) {\n        // set the current page to the given page\n        this.currentPage = page;\n        this.getReconciledRecords(\"\")\n      }\n    },\n\n    //number format\n    numberFormat(num) {\n      const britishNumberFormatter = new Intl.NumberFormat(\"en-GB\");\n      return britishNumberFormatter.format(num)\n    },\n\n    formatDateTime(dateTimeStr) {\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const date = new Date(dateTimeStr);\n\n      if (isNaN(date.getTime())) {\n        return 'Invalid Date';\n      }\n\n      const day = date.getDate();\n      const month = months[date.getMonth()];\n      const year = date.getFullYear();\n      let hours = date.getHours();\n      const minutes = date.getMinutes();\n      const period = hours >= 12 ? 'PM' : 'AM';\n\n      hours = hours % 12;\n      hours = hours ? hours : 12; // Handle midnight (00:00) as 12 AM\n\n      const formattedDateTime = `${day} ${month} ${year} At ${hours}:${minutes.toString().padStart(2, '0')} ${period}`;\n      return formattedDateTime;\n    },\n    showDate() {\n      const dateObj = new Date();\n      const currentDate =\n          dateObj.getDate() +\n          \"/\" +\n          dateObj.getMonth() +\n          \"/\" +\n          dateObj.getFullYear();\n      return currentDate;\n    },\n    formatPrice(value) {\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    closeModal() {\n      // Add any additional logic you need before closing the modal\n      // For example, you may want to reset some data or perform an action\n      // Then, close the modal\n      $('#uploadFile').modal('hide'); // Assuming you're using Bootstrap modal\n    },\n\n    downloadReconciledRecords(){\n      this.download =\"Please wait..\"\n      const data = new FormData();\n      data.append(\"function\", \"downloadReconciledRecords\");\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      executeDownload(data,biller).then(response => {\n        this.download =\"Download Report\"\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(response.data);\n        link.download = this.dateFrom+' to '+ this.dateTo+\"Reports.csv\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    },\n    getReconciledRecords() {\n      this.loading = true\n      const data = new FormData();\n      data.append(\"function\", \"getReconciledRecords\");\n      data.append(\"page\", this.currentPage);\n      data.append(\"rows_per_page\", this.pageSize);\n      data.append(\"search\", this.search);\n      data.append(\"dateFrom\", this.dateFrom);\n      data.append(\"dateTo\", this.dateTo);\n      // Assuming 'pay' is defined\n      execute(data,biller)\n          .then((res) => {\n            if (res.data.success) {\n              this.loading = false\n              this.ReconTransactions = res.data.data.ReconTransactions\n              this.summary = res.data.data.summary\n              this.totalPages =  Math.ceil(this.summary.count / this.pageSize);\n            } else {\n              this.loading = false\n            }\n          })\n          .catch((e) => {\n\n          });\n    },\n\n    getFileName(filePath){\n\n      const parts = filePath.split('/');\n\n// Get the last part (the filename)\n      const filename = parts[parts.length - 1];\n\n      return filename;\n\n    },\n\n    formattedTime(time) {\n      return moment(time).format('hh:mm A')\n    }\n\n\n  },\n};\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}